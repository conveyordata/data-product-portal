{
  "openapi": "3.1.0",
  "info": {
    "title": "Data product portal",
    "summary": "Backend API implementation for Data product portal",
    "contact": {
      "name": "Stijn Janssens",
      "email": "stijn.janssens@dataminded.com"
    },
    "version": "0.4.0"
  },
  "paths": {
    "/api/authz/access/{action}": {
      "get": {
        "tags": [
          "authz"
        ],
        "summary": "Check Access",
        "description": "Allows the requesting user to check whether an access check will fail or succeed.\nUseful to conditionally disable parts of the UI that are known to be inaccessible.",
        "operationId": "check_access_api_authz_access__action__get",
        "parameters": [
          {
            "name": "action",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/AuthorizationAction"
            }
          },
          {
            "name": "resource",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Resource"
            }
          },
          {
            "name": "domain",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Domain"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Access check result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessResponse",
                  "type": "object",
                  "properties": {
                    "access": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/authz/admin": {
      "get": {
        "tags": [
          "authz"
        ],
        "summary": "Is Admin",
        "operationId": "is_admin_api_authz_admin_get",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Admin role assignment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "title": "Response Is Admin Api Authz Admin Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/datasets": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Get Datasets",
        "operationId": "get_datasets_api_datasets_get",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DatasetsGet-Output"
                  },
                  "title": "Response Get Datasets Api Datasets Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Create Dataset",
        "operationId": "create_dataset_api_datasets_post",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Dataset successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "title": "Response Create Dataset Api Datasets Post"
                },
                "example": {
                  "id": "random id of the new dataset"
                }
              }
            }
          },
          "404": {
            "description": "Owner not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "User email for owner not found"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/datasets/namespace_suggestion": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Get Dataset Namespace Suggestion",
        "operationId": "get_dataset_namespace_suggestion_api_datasets_namespace_suggestion_get",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamespaceSuggestion"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/datasets/validate_namespace": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Validate Dataset Namespace",
        "operationId": "validate_dataset_namespace_api_datasets_validate_namespace_get",
        "parameters": [
          {
            "name": "namespace",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Namespace"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamespaceValidation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/datasets/namespace_length_limits": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Get Dataset Namespace Length Limits",
        "operationId": "get_dataset_namespace_length_limits_api_datasets_namespace_length_limits_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamespaceLengthLimits"
                }
              }
            }
          }
        }
      }
    },
    "/api/datasets/{id}": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Get Dataset",
        "operationId": "get_dataset_api_datasets__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "datasets"
        ],
        "summary": "Remove Dataset",
        "operationId": "remove_dataset_api_datasets__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Dataset not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Dataset id not found"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "datasets"
        ],
        "summary": "Update Dataset",
        "operationId": "update_dataset_api_datasets__id__put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "title": "Response Update Dataset Api Datasets  Id  Put"
                }
              }
            }
          },
          "404": {
            "description": "Dataset not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Dataset id not found"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/datasets/user/{user_id}": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Get User Datasets",
        "operationId": "get_user_datasets_api_datasets_user__user_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DatasetsGet-Output"
                  },
                  "title": "Response Get User Datasets Api Datasets User  User Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/datasets/{id}/history": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Get Event History",
        "operationId": "get_event_history_api_datasets__id__history_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventGet-Output"
                  },
                  "title": "Response Get Event History Api Datasets  Id  History Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/datasets/{id}/about": {
      "put": {
        "tags": [
          "datasets"
        ],
        "summary": "Update Dataset About",
        "operationId": "update_dataset_about_api_datasets__id__about_put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetAboutUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Dataset not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Dataset id not found"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/datasets/{id}/status": {
      "put": {
        "tags": [
          "datasets"
        ],
        "summary": "Update Dataset Status",
        "operationId": "update_dataset_status_api_datasets__id__status_put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetStatusUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Dataset not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Dataset id not found"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/datasets/{id}/usage": {
      "put": {
        "tags": [
          "datasets"
        ],
        "summary": "Update Dataset Usage",
        "operationId": "update_dataset_usage_api_datasets__id__usage_put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetUsageUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/datasets/{id}/graph": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Get Graph Data",
        "operationId": "get_graph_data_api_datasets__id__graph_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "level",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 3,
              "title": "Level"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Graph"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/datasets/{id}/settings/{setting_id}": {
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Set Value For Dataset",
        "operationId": "set_value_for_dataset_api_datasets__id__settings__setting_id__post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "setting_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Setting Id"
            }
          },
          {
            "name": "value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Value"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_products": {
      "get": {
        "tags": [
          "data_products"
        ],
        "summary": "Get Data Products",
        "operationId": "get_data_products_api_data_products_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataProductsGet-Output"
                  },
                  "title": "Response Get Data Products Api Data Products Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "data_products"
        ],
        "summary": "Create Data Product",
        "operationId": "create_data_product_api_data_products_post",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataProductCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Data Product successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "title": "Response Create Data Product Api Data Products Post"
                },
                "example": {
                  "id": "random id of the new data_product"
                }
              }
            }
          },
          "404": {
            "description": "Owner not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "User id for owner not found"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_products/namespace_suggestion": {
      "get": {
        "tags": [
          "data_products"
        ],
        "summary": "Get Data Product Namespace Suggestion",
        "operationId": "get_data_product_namespace_suggestion_api_data_products_namespace_suggestion_get",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamespaceSuggestion"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_products/validate_namespace": {
      "get": {
        "tags": [
          "data_products"
        ],
        "summary": "Validate Data Product Namespace",
        "operationId": "validate_data_product_namespace_api_data_products_validate_namespace_get",
        "parameters": [
          {
            "name": "namespace",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Namespace"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamespaceValidation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_products/namespace_length_limits": {
      "get": {
        "tags": [
          "data_products"
        ],
        "summary": "Get Data Product Namespace Length Limits",
        "operationId": "get_data_product_namespace_length_limits_api_data_products_namespace_length_limits_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamespaceLengthLimits"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_products/user/{user_id}": {
      "get": {
        "tags": [
          "data_products"
        ],
        "summary": "Get User Data Products",
        "operationId": "get_user_data_products_api_data_products_user__user_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataProductsGet-Output"
                  },
                  "title": "Response Get User Data Products Api Data Products User  User Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_products/{id}": {
      "get": {
        "tags": [
          "data_products"
        ],
        "summary": "Get Data Product",
        "operationId": "get_data_product_api_data_products__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataProductGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "data_products"
        ],
        "summary": "Remove Data Product",
        "operationId": "remove_data_product_api_data_products__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Data Product not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Data Product id not found"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "data_products"
        ],
        "summary": "Update Data Product",
        "operationId": "update_data_product_api_data_products__id__put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataProductUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "title": "Response Update Data Product Api Data Products  Id  Put"
                }
              }
            }
          },
          "404": {
            "description": "Data Product not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Data Product id not found"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_products/{id}/history": {
      "get": {
        "tags": [
          "data_products"
        ],
        "summary": "Get Event History",
        "operationId": "get_event_history_api_data_products__id__history_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventGet-Output"
                  },
                  "title": "Response Get Event History Api Data Products  Id  History Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_products/{id}/data_output": {
      "post": {
        "tags": [
          "data_products"
        ],
        "summary": "Create Data Output",
        "operationId": "create_data_output_api_data_products__id__data_output_post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataOutputCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "DataOutput successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "title": "Response Create Data Output Api Data Products  Id  Data Output Post"
                },
                "example": {
                  "id": "random id of the new data_output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_products/{id}/data_output/validate_namespace": {
      "get": {
        "tags": [
          "data_products"
        ],
        "summary": "Validate Data Output Namespace",
        "operationId": "validate_data_output_namespace_api_data_products__id__data_output_validate_namespace_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Namespace"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamespaceValidation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_products/{id}/about": {
      "put": {
        "tags": [
          "data_products"
        ],
        "summary": "Update Data Product About",
        "operationId": "update_data_product_about_api_data_products__id__about_put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataProductAboutUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Data Product not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Data Product id not found"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_products/{id}/status": {
      "put": {
        "tags": [
          "data_products"
        ],
        "summary": "Update Data Product Status",
        "operationId": "update_data_product_status_api_data_products__id__status_put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataProductStatusUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Data Product not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Data Product id not found"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_products/{id}/usage": {
      "put": {
        "tags": [
          "data_products"
        ],
        "summary": "Update Data Product Usage",
        "operationId": "update_data_product_usage_api_data_products__id__usage_put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataProductUsageUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_products/{id}/dataset/{dataset_id}": {
      "post": {
        "tags": [
          "data_products"
        ],
        "summary": "Link Dataset To Data Product",
        "operationId": "link_dataset_to_data_product_api_data_products__id__dataset__dataset_id__post",
        "deprecated": true,
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "title": "Response Link Dataset To Data Product Api Data Products  Id  Dataset  Dataset Id  Post"
                }
              }
            }
          },
          "400": {
            "description": "Dataset not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Dataset not found"
                }
              }
            }
          },
          "404": {
            "description": "Data Product not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Data Product id not found"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "data_products"
        ],
        "summary": "Unlink Dataset From Data Product",
        "operationId": "unlink_dataset_from_data_product_api_data_products__id__dataset__dataset_id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Dataset not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Dataset not found"
                }
              }
            }
          },
          "404": {
            "description": "Data Product not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Data Product id not found"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_products/{id}/link_datasets": {
      "post": {
        "tags": [
          "data_products"
        ],
        "summary": "Link Datasets To Data Product",
        "operationId": "link_datasets_to_data_product_api_data_products__id__link_datasets_post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkDatasetsToDataProduct"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkDatasetsToDataProductPost"
                }
              }
            }
          },
          "400": {
            "description": "Dataset not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Dataset not found"
                }
              }
            }
          },
          "404": {
            "description": "Data Product not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Data Product id not found"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_products/{id}/role": {
      "get": {
        "tags": [
          "data_products"
        ],
        "summary": "Get Role",
        "operationId": "get_role_api_data_products__id__role_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "environment",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Environment"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Get Role Api Data Products  Id  Role Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_products/{id}/signin_url": {
      "get": {
        "tags": [
          "data_products"
        ],
        "summary": "Get Signin Url",
        "operationId": "get_signin_url_api_data_products__id__signin_url_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "environment",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Environment"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Get Signin Url Api Data Products  Id  Signin Url Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_products/{id}/conveyor_ide_url": {
      "get": {
        "tags": [
          "data_products"
        ],
        "summary": "Get Conveyor Ide Url",
        "operationId": "get_conveyor_ide_url_api_data_products__id__conveyor_ide_url_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Get Conveyor Ide Url Api Data Products  Id  Conveyor Ide Url Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_products/{id}/databricks_workspace_url": {
      "get": {
        "tags": [
          "data_products"
        ],
        "summary": "Get Databricks Workspace Url",
        "operationId": "get_databricks_workspace_url_api_data_products__id__databricks_workspace_url_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "environment",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Environment"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Get Databricks Workspace Url Api Data Products  Id  Databricks Workspace Url Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_products/{id}/snowflake_url": {
      "get": {
        "tags": [
          "data_products"
        ],
        "summary": "Get Snowflake Url",
        "operationId": "get_snowflake_url_api_data_products__id__snowflake_url_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "environment",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Environment"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Get Snowflake Url Api Data Products  Id  Snowflake Url Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_products/{id}/data_outputs": {
      "get": {
        "tags": [
          "data_products"
        ],
        "summary": "Get Data Outputs",
        "operationId": "get_data_outputs_api_data_products__id__data_outputs_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataOutputGet"
                  },
                  "title": "Response Get Data Outputs Api Data Products  Id  Data Outputs Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_products/{id}/graph": {
      "get": {
        "tags": [
          "data_products"
        ],
        "summary": "Get Graph Data",
        "operationId": "get_graph_data_api_data_products__id__graph_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "level",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 3,
              "title": "Level"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Graph"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_products/{id}/settings/{setting_id}": {
      "post": {
        "tags": [
          "data_products"
        ],
        "summary": "Set Value For Data Product",
        "operationId": "set_value_for_data_product_api_data_products__id__settings__setting_id__post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "setting_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Setting Id"
            }
          },
          {
            "name": "value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Value"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_product_types": {
      "get": {
        "tags": [
          "data_product_types"
        ],
        "summary": "Get Data Products Types",
        "operationId": "get_data_products_types_api_data_product_types_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataProductTypesGet"
                  },
                  "title": "Response Get Data Products Types Api Data Product Types Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "data_product_types"
        ],
        "summary": "Create Data Product Type",
        "operationId": "create_data_product_type_api_data_product_types_post",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataProductTypeCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Data Product successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "title": "Response Create Data Product Type Api Data Product Types Post"
                },
                "example": {
                  "id": "random id of the new data product"
                }
              }
            }
          },
          "404": {
            "description": "Owner not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "User id for owner not found"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_product_types/{id}": {
      "get": {
        "tags": [
          "data_product_types"
        ],
        "summary": "Get Data Product Type",
        "operationId": "get_data_product_type_api_data_product_types__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataProductTypeGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "data_product_types"
        ],
        "summary": "Update Data Product Type",
        "operationId": "update_data_product_type_api_data_product_types__id__put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataProductTypeUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "title": "Response Update Data Product Type Api Data Product Types  Id  Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "data_product_types"
        ],
        "summary": "Remove Data Product Type",
        "operationId": "remove_data_product_type_api_data_product_types__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_product_types/migrate/{from_id}/{to_id}": {
      "put": {
        "tags": [
          "data_product_types"
        ],
        "summary": "Migrate Data Product Type",
        "operationId": "migrate_data_product_type_api_data_product_types_migrate__from_id___to_id__put",
        "parameters": [
          {
            "name": "from_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "From Id"
            }
          },
          {
            "name": "to_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "To Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_product_lifecycles": {
      "get": {
        "tags": [
          "data_product_lifecycles"
        ],
        "summary": "Get Data Products Lifecycles",
        "operationId": "get_data_products_lifecycles_api_data_product_lifecycles_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataProductLifeCyclesGet"
                  },
                  "title": "Response Get Data Products Lifecycles Api Data Product Lifecycles Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "data_product_lifecycles"
        ],
        "summary": "Create Data Product Lifecycle",
        "operationId": "create_data_product_lifecycle_api_data_product_lifecycles_post",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataProductLifeCycleCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Data Product successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "title": "Response Create Data Product Lifecycle Api Data Product Lifecycles Post"
                },
                "example": {
                  "id": "random id of the new data product"
                }
              }
            }
          },
          "404": {
            "description": "Owner not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "User id for owner not found"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_product_lifecycles/{id}": {
      "put": {
        "tags": [
          "data_product_lifecycles"
        ],
        "summary": "Update Data Product Lifecycle",
        "operationId": "update_data_product_lifecycle_api_data_product_lifecycles__id__put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataProductLifeCycleUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Data Product lifecycle updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "title": "Response Update Data Product Lifecycle Api Data Product Lifecycles  Id  Put"
                },
                "example": {
                  "id": "random id of the updated data product lifecycle"
                }
              }
            }
          },
          "404": {
            "description": "Owner not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "User id for owner not found"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "data_product_lifecycles"
        ],
        "summary": "Delete Data Product Lifecycle",
        "operationId": "delete_data_product_lifecycle_api_data_product_lifecycles__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_product_settings": {
      "get": {
        "tags": [
          "data_product_settings"
        ],
        "summary": "Get Data Products Settings",
        "operationId": "get_data_products_settings_api_data_product_settings_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataProductSettingsGet"
                  },
                  "title": "Response Get Data Products Settings Api Data Product Settings Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "data_product_settings"
        ],
        "summary": "Create Data Product Setting",
        "operationId": "create_data_product_setting_api_data_product_settings_post",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataProductSettingCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "title": "Response Create Data Product Setting Api Data Product Settings Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_product_settings/namespace_suggestion": {
      "get": {
        "tags": [
          "data_product_settings"
        ],
        "summary": "Get Data Product Settings Namespace Suggestion",
        "operationId": "get_data_product_settings_namespace_suggestion_api_data_product_settings_namespace_suggestion_get",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamespaceSuggestion"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_product_settings/validate_namespace": {
      "get": {
        "tags": [
          "data_product_settings"
        ],
        "summary": "Validate Data Product Settings Namespace",
        "operationId": "validate_data_product_settings_namespace_api_data_product_settings_validate_namespace_get",
        "parameters": [
          {
            "name": "namespace",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Namespace"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DataProductSettingScope"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamespaceValidation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_product_settings/namespace_length_limits": {
      "get": {
        "tags": [
          "data_product_settings"
        ],
        "summary": "Get Data Product Settings Namespace Length Limits",
        "operationId": "get_data_product_settings_namespace_length_limits_api_data_product_settings_namespace_length_limits_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamespaceLengthLimits"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_product_settings/{id}": {
      "put": {
        "tags": [
          "data_product_settings"
        ],
        "summary": "Update Data Product Setting",
        "operationId": "update_data_product_setting_api_data_product_settings__id__put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataProductSettingUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "title": "Response Update Data Product Setting Api Data Product Settings  Id  Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "data_product_settings"
        ],
        "summary": "Delete Data Product Setting",
        "operationId": "delete_data_product_setting_api_data_product_settings__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_product_dataset_links/approve/{id}": {
      "post": {
        "tags": [
          "data_product_dataset_links"
        ],
        "summary": "Approve Data Product Link",
        "operationId": "approve_data_product_link_api_data_product_dataset_links_approve__id__post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_product_dataset_links/deny/{id}": {
      "post": {
        "tags": [
          "data_product_dataset_links"
        ],
        "summary": "Deny Data Product Link",
        "operationId": "deny_data_product_link_api_data_product_dataset_links_deny__id__post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_product_dataset_links/remove/{id}": {
      "post": {
        "tags": [
          "data_product_dataset_links"
        ],
        "summary": "Remove Data Product Link",
        "operationId": "remove_data_product_link_api_data_product_dataset_links_remove__id__post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_product_dataset_links/actions": {
      "get": {
        "tags": [
          "data_product_dataset_links"
        ],
        "summary": "Get User Pending Actions",
        "operationId": "get_user_pending_actions_api_data_product_dataset_links_actions_get",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataProductDatasetPendingAction-Output"
                  },
                  "title": "Response Get User Pending Actions Api Data Product Dataset Links Actions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_output_dataset_links/approve/{id}": {
      "post": {
        "tags": [
          "data_output_dataset_links"
        ],
        "summary": "Approve Data Output Link",
        "operationId": "approve_data_output_link_api_data_output_dataset_links_approve__id__post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_output_dataset_links/deny/{id}": {
      "post": {
        "tags": [
          "data_output_dataset_links"
        ],
        "summary": "Deny Data Output Link",
        "operationId": "deny_data_output_link_api_data_output_dataset_links_deny__id__post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_output_dataset_links/remove/{id}": {
      "post": {
        "tags": [
          "data_output_dataset_links"
        ],
        "summary": "Remove Data Output Link",
        "operationId": "remove_data_output_link_api_data_output_dataset_links_remove__id__post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_output_dataset_links/actions": {
      "get": {
        "tags": [
          "data_output_dataset_links"
        ],
        "summary": "Get User Pending Actions",
        "operationId": "get_user_pending_actions_api_data_output_dataset_links_actions_get",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataOutputDatasetPendingAction-Output"
                  },
                  "title": "Response Get User Pending Actions Api Data Output Dataset Links Actions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_outputs": {
      "get": {
        "tags": [
          "data_outputs"
        ],
        "summary": "Get Data Outputs",
        "operationId": "get_data_outputs_api_data_outputs_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DataOutputsGet-Output"
                  },
                  "type": "array",
                  "title": "Response Get Data Outputs Api Data Outputs Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_outputs/namespace_suggestion": {
      "get": {
        "tags": [
          "data_outputs"
        ],
        "summary": "Get Data Output Namespace Suggestion",
        "operationId": "get_data_output_namespace_suggestion_api_data_outputs_namespace_suggestion_get",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamespaceSuggestion"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_outputs/namespace_length_limits": {
      "get": {
        "tags": [
          "data_outputs"
        ],
        "summary": "Get Data Output Namespace Length Limits",
        "operationId": "get_data_output_namespace_length_limits_api_data_outputs_namespace_length_limits_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamespaceLengthLimits"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_outputs/result_string": {
      "post": {
        "tags": [
          "data_outputs"
        ],
        "summary": "Get Data Output Result String",
        "operationId": "get_data_output_result_string_api_data_outputs_result_string_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataOutputResultStringRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Get Data Output Result String Api Data Outputs Result String Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_outputs/{id}": {
      "get": {
        "tags": [
          "data_outputs"
        ],
        "summary": "Get Data Output",
        "operationId": "get_data_output_api_data_outputs__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataOutputGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "data_outputs"
        ],
        "summary": "Remove Data Output",
        "operationId": "remove_data_output_api_data_outputs__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Data Output not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Data Output id not found"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "data_outputs"
        ],
        "summary": "Update Data Output",
        "operationId": "update_data_output_api_data_outputs__id__put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataOutputUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "title": "Response Update Data Output Api Data Outputs  Id  Put"
                }
              }
            }
          },
          "404": {
            "description": "Data Output not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Data Output id not found"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_outputs/{id}/history": {
      "get": {
        "tags": [
          "data_outputs"
        ],
        "summary": "Get Event History",
        "operationId": "get_event_history_api_data_outputs__id__history_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventGet-Output"
                  },
                  "title": "Response Get Event History Api Data Outputs  Id  History Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_outputs/{id}/status": {
      "put": {
        "tags": [
          "data_outputs"
        ],
        "summary": "Update Data Output Status",
        "operationId": "update_data_output_status_api_data_outputs__id__status_put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataOutputStatusUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Data Output not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Data Output id not found"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_outputs/{id}/dataset/{dataset_id}": {
      "post": {
        "tags": [
          "data_outputs"
        ],
        "summary": "Link Dataset To Data Output",
        "operationId": "link_dataset_to_data_output_api_data_outputs__id__dataset__dataset_id__post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "title": "Response Link Dataset To Data Output Api Data Outputs  Id  Dataset  Dataset Id  Post"
                }
              }
            }
          },
          "400": {
            "description": "Dataset not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Dataset not found"
                }
              }
            }
          },
          "404": {
            "description": "Data Product not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Data Product id not found"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "data_outputs"
        ],
        "summary": "Unlink Dataset From Data Output",
        "operationId": "unlink_dataset_from_data_output_api_data_outputs__id__dataset__dataset_id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Dataset not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Dataset not found"
                }
              }
            }
          },
          "404": {
            "description": "Data Product not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Data Product id not found"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data_outputs/{id}/graph": {
      "get": {
        "tags": [
          "data_outputs"
        ],
        "summary": "Get Graph Data",
        "operationId": "get_graph_data_api_data_outputs__id__graph_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "level",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 3,
              "title": "Level"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Graph"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/domains": {
      "get": {
        "tags": [
          "domains"
        ],
        "summary": "Get Domains",
        "operationId": "get_domains_api_domains_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DomainsGet"
                  },
                  "title": "Response Get Domains Api Domains Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "domains"
        ],
        "summary": "Create Domain",
        "operationId": "create_domain_api_domains_post",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "title": "Response Create Domain Api Domains Post"
                },
                "example": {
                  "id": "random id of the new domain"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/domains/{id}": {
      "get": {
        "tags": [
          "domains"
        ],
        "summary": "Get Domain",
        "operationId": "get_domain_api_domains__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "domains"
        ],
        "summary": "Update Domain",
        "operationId": "update_domain_api_domains__id__put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "title": "Response Update Domain Api Domains  Id  Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "domains"
        ],
        "summary": "Remove Domain",
        "operationId": "remove_domain_api_domains__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/domains/migrate/{from_id}/{to_id}": {
      "put": {
        "tags": [
          "domains"
        ],
        "summary": "Migrate Domain",
        "operationId": "migrate_domain_api_domains_migrate__from_id___to_id__put",
        "parameters": [
          {
            "name": "from_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "From Id"
            }
          },
          {
            "name": "to_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "To Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/envs": {
      "get": {
        "tags": [
          "environments"
        ],
        "summary": "Get Environments",
        "operationId": "get_environments_api_envs_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Environment"
                  },
                  "type": "array",
                  "title": "Response Get Environments Api Envs Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/envs/{id}": {
      "get": {
        "tags": [
          "environments"
        ],
        "summary": "Get Environment",
        "operationId": "get_environment_api_envs__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Environment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/envs/{id}/configs": {
      "get": {
        "tags": [
          "environments"
        ],
        "summary": "Get Environment Configs",
        "operationId": "get_environment_configs_api_envs__id__configs_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnvironmentPlatformServiceConfiguration-Output"
                  },
                  "title": "Response Get Environment Configs Api Envs  Id  Configs Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/envs/configs/{config_id}": {
      "get": {
        "tags": [
          "environments"
        ],
        "summary": "Get Environment Configs By Id",
        "operationId": "get_environment_configs_by_id_api_envs_configs__config_id__get",
        "parameters": [
          {
            "name": "config_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Config Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentPlatformServiceConfiguration-Output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/envs/{id}/platforms/{platform_id}/services/{service_id}/config": {
      "get": {
        "tags": [
          "environments"
        ],
        "summary": "Get Environment Platform Service Config",
        "operationId": "get_environment_platform_service_config_api_envs__id__platforms__platform_id__services__service_id__config_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "platform_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Platform Id"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Service Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentPlatformServiceConfiguration-Output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/envs/platforms/{platform_id}/services/{service_id}/config": {
      "get": {
        "tags": [
          "environments"
        ],
        "summary": "Get Environment Platform Service Config For All Envs",
        "operationId": "get_environment_platform_service_config_for_all_envs_api_envs_platforms__platform_id__services__service_id__config_get",
        "parameters": [
          {
            "name": "platform_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Platform Id"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Service Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnvironmentPlatformServiceConfiguration-Output"
                  },
                  "title": "Response Get Environment Platform Service Config For All Envs Api Envs Platforms  Platform Id  Services  Service Id  Config Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/envs/{id}/platforms/{platform_id}/config": {
      "get": {
        "tags": [
          "environments"
        ],
        "summary": "Get Environment Platform Config",
        "operationId": "get_environment_platform_config_api_envs__id__platforms__platform_id__config_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "platform_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Platform Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentPlatformConfiguration"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/platforms": {
      "get": {
        "tags": [
          "platforms"
        ],
        "summary": "Get All Platforms",
        "operationId": "get_all_platforms_api_platforms_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Platform"
                  },
                  "type": "array",
                  "title": "Response Get All Platforms Api Platforms Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/platforms/{id}/services": {
      "get": {
        "tags": [
          "platforms"
        ],
        "summary": "Get Platform Services",
        "operationId": "get_platform_services_api_platforms__id__services_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlatformService"
                  },
                  "title": "Response Get Platform Services Api Platforms  Id  Services Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/platforms/{id}/services/{service_id}": {
      "get": {
        "tags": [
          "platforms"
        ],
        "summary": "Get Platform Service Config",
        "description": "Get Platform Service config",
        "operationId": "get_platform_service_config_api_platforms__id__services__service_id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Service Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformServiceConfiguration"
                }
              }
            }
          },
          "404": {
            "description": "Platform service configuration not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Platform service configuration not found"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/platforms/configs": {
      "get": {
        "tags": [
          "platforms"
        ],
        "summary": "Get All Platform Service Configurations",
        "operationId": "get_all_platform_service_configurations_api_platforms_configs_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PlatformServiceConfiguration"
                  },
                  "type": "array",
                  "title": "Response Get All Platform Service Configurations Api Platforms Configs Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/platforms/configs/{config_id}": {
      "get": {
        "tags": [
          "platforms"
        ],
        "summary": "Get Single Platform Service Configuration",
        "operationId": "get_single_platform_service_configuration_api_platforms_configs__config_id__get",
        "parameters": [
          {
            "name": "config_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Config Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformServiceConfiguration"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/tags": {
      "get": {
        "tags": [
          "tags"
        ],
        "summary": "Get Tags",
        "operationId": "get_tags_api_tags_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TagsGet"
                  },
                  "title": "Response Get Tags Api Tags Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tags"
        ],
        "summary": "Create Tag",
        "operationId": "create_tag_api_tags_post",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "title": "Response Create Tag Api Tags Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/tags/{id}": {
      "put": {
        "tags": [
          "tags"
        ],
        "summary": "Update Tag",
        "operationId": "update_tag_api_tags__id__put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "title": "Response Update Tag Api Tags  Id  Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tags"
        ],
        "summary": "Remove Tag",
        "operationId": "remove_tag_api_tags__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get Users",
        "operationId": "get_users_api_users_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UsersGet-Output"
                  },
                  "title": "Response Get Users Api Users Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create User",
        "operationId": "create_user_api_users_post",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "title": "Response Create User Api Users Post"
                },
                "example": {
                  "id": "random id of the new user"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Remove User",
        "operationId": "remove_user_api_users__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "User email not found"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/seen_tour": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Mark Tour As Seen",
        "operationId": "mark_tour_as_seen_api_users_seen_tour_post",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/roles/{scope}": {
      "get": {
        "tags": [
          "roles"
        ],
        "summary": "Get Roles",
        "operationId": "get_roles_api_roles__scope__get",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Scope"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  },
                  "title": "Response Get Roles Api Roles  Scope  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/roles": {
      "post": {
        "tags": [
          "roles"
        ],
        "summary": "Create Role",
        "operationId": "create_role_api_roles_post",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRole"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                },
                "example": {
                  "id": "random id of the new role"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "roles"
        ],
        "summary": "Update Role",
        "operationId": "update_role_api_roles_patch",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRole"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                },
                "example": {
                  "id": "id of the updated role"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/roles/{id}": {
      "delete": {
        "tags": [
          "roles"
        ],
        "summary": "Remove Role",
        "operationId": "remove_role_api_roles__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Role not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Role not found"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/role_assignments/global": {
      "get": {
        "tags": [
          "role_assignments"
        ],
        "summary": "List Assignments",
        "operationId": "list_assignments_api_role_assignments_global_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "role_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Role Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/app__role_assignments__global___schema__RoleAssignmentResponse-Output"
                  },
                  "title": "Response List Assignments Api Role Assignments Global Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "role_assignments"
        ],
        "summary": "Create Assignment",
        "operationId": "create_assignment_api_role_assignments_global_post",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__role_assignments__global___schema__CreateRoleAssignment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__role_assignments__global___schema__RoleAssignmentResponse-Output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/role_assignments/global/{id}": {
      "delete": {
        "tags": [
          "role_assignments"
        ],
        "summary": "Delete Assignment",
        "operationId": "delete_assignment_api_role_assignments_global__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/role_assignments/global/{id}/decide": {
      "patch": {
        "tags": [
          "role_assignments"
        ],
        "summary": "Decide Assignment",
        "operationId": "decide_assignment_api_role_assignments_global__id__decide_patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__role_assignments__dataset__schema__DecideRoleAssignment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__role_assignments__global___schema__RoleAssignmentResponse-Output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/role_assignments/global/{id}/role": {
      "patch": {
        "tags": [
          "role_assignments"
        ],
        "summary": "Modify Assigned Role",
        "operationId": "modify_assigned_role_api_role_assignments_global__id__role_patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__role_assignments__global___schema__ModifyRoleAssignment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__role_assignments__global___schema__RoleAssignmentResponse-Output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/role_assignments/data_product": {
      "get": {
        "tags": [
          "role_assignments"
        ],
        "summary": "List Assignments",
        "operationId": "list_assignments_api_role_assignments_data_product_get",
        "parameters": [
          {
            "name": "data_product_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Data Product Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "role_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Role Id"
            }
          },
          {
            "name": "decision",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/DecisionStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Decision"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/app__role_assignments__data_product__schema__RoleAssignmentResponse"
                  },
                  "title": "Response List Assignments Api Role Assignments Data Product Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/role_assignments/data_product/{id}": {
      "post": {
        "tags": [
          "role_assignments"
        ],
        "summary": "Create Assignment",
        "operationId": "create_assignment_api_role_assignments_data_product__id__post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__role_assignments__data_product__schema__CreateRoleAssignment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__role_assignments__data_product__schema__RoleAssignmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "role_assignments"
        ],
        "summary": "Delete Assignment",
        "operationId": "delete_assignment_api_role_assignments_data_product__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "role_assignments"
        ],
        "summary": "Modify Assigned Role",
        "operationId": "modify_assigned_role_api_role_assignments_data_product__id__patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__role_assignments__data_product__schema__ModifyRoleAssignment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__role_assignments__data_product__schema__RoleAssignmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/role_assignments/data_product/request/{id}": {
      "post": {
        "tags": [
          "role_assignments"
        ],
        "summary": "Request Assignment",
        "operationId": "request_assignment_api_role_assignments_data_product_request__id__post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__role_assignments__data_product__schema__CreateRoleAssignment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__role_assignments__data_product__schema__RoleAssignmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/role_assignments/data_product/{id}/decide": {
      "patch": {
        "tags": [
          "role_assignments"
        ],
        "summary": "Decide Assignment",
        "operationId": "decide_assignment_api_role_assignments_data_product__id__decide_patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__role_assignments__dataset__schema__DecideRoleAssignment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__role_assignments__data_product__schema__RoleAssignmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/role_assignments/dataset": {
      "get": {
        "tags": [
          "role_assignments"
        ],
        "summary": "List Assignments",
        "operationId": "list_assignments_api_role_assignments_dataset_get",
        "parameters": [
          {
            "name": "dataset_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Dataset Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "role_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Role Id"
            }
          },
          {
            "name": "decision",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/DecisionStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Decision"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/app__role_assignments__dataset__schema__RoleAssignmentResponse"
                  },
                  "title": "Response List Assignments Api Role Assignments Dataset Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/role_assignments/dataset/{id}": {
      "post": {
        "tags": [
          "role_assignments"
        ],
        "summary": "Create Assignment",
        "operationId": "create_assignment_api_role_assignments_dataset__id__post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__role_assignments__dataset__schema__CreateRoleAssignment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__role_assignments__dataset__schema__RoleAssignmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "role_assignments"
        ],
        "summary": "Delete Assignment",
        "operationId": "delete_assignment_api_role_assignments_dataset__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "role_assignments"
        ],
        "summary": "Modify Assigned Role",
        "operationId": "modify_assigned_role_api_role_assignments_dataset__id__patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__role_assignments__dataset__schema__ModifyRoleAssignment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__role_assignments__dataset__schema__RoleAssignmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/role_assignments/dataset/request/{id}": {
      "post": {
        "tags": [
          "role_assignments"
        ],
        "summary": "Request Assignment",
        "operationId": "request_assignment_api_role_assignments_dataset_request__id__post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__role_assignments__dataset__schema__CreateRoleAssignment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__role_assignments__dataset__schema__RoleAssignmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/role_assignments/dataset/{id}/decide": {
      "patch": {
        "tags": [
          "role_assignments"
        ],
        "summary": "Decide Assignment",
        "operationId": "decide_assignment_api_role_assignments_dataset__id__decide_patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__role_assignments__dataset__schema__DecideRoleAssignment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__role_assignments__dataset__schema__RoleAssignmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/theme_settings": {
      "get": {
        "tags": [
          "theme_settings"
        ],
        "summary": "Get Settings",
        "operationId": "get_settings_api_theme_settings_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThemeSettings"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "theme_settings"
        ],
        "summary": "Update Settings",
        "operationId": "update_settings_api_theme_settings_put",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThemeSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/graph": {
      "get": {
        "tags": [
          "graph"
        ],
        "summary": "Get Graph Data",
        "operationId": "get_graph_data_api_graph_get",
        "parameters": [
          {
            "name": "domain_nodes_enabled",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Domain Nodes Enabled"
            }
          },
          {
            "name": "data_product_nodes_enabled",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Data Product Nodes Enabled"
            }
          },
          {
            "name": "dataset_nodes_enabled",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Dataset Nodes Enabled"
            }
          },
          {
            "name": "data_output_nodes_enabled",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Data Output Nodes Enabled"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Graph"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications": {
      "get": {
        "tags": [
          "notifications"
        ],
        "summary": "Get User Notifications",
        "operationId": "get_user_notifications_api_notifications_get",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationGet-Output"
                  },
                  "title": "Response Get User Notifications Api Notifications Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications/all": {
      "delete": {
        "tags": [
          "notifications"
        ],
        "summary": "Remove All User Notifications",
        "operationId": "remove_all_user_notifications_api_notifications_all_delete",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications/{id}": {
      "delete": {
        "tags": [
          "notifications"
        ],
        "summary": "Remove User Notification",
        "operationId": "remove_user_notification_api_notifications__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/pending_actions": {
      "get": {
        "tags": [
          "pending_actions"
        ],
        "summary": "Get User Pending Actions",
        "operationId": "get_user_pending_actions_api_pending_actions_get",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/DataProductDatasetPendingAction-Output"
                      },
                      {
                        "$ref": "#/components/schemas/DataOutputDatasetPendingAction-Output"
                      },
                      {
                        "$ref": "#/components/schemas/DataProductRoleAssignmentPendingAction-Output"
                      }
                    ]
                  },
                  "title": "Response Get User Pending Actions Api Pending Actions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/events/latest": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Get Latest Event Timestamp",
        "operationId": "get_latest_event_timestamp_api_events_latest_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Get Latest Event Timestamp Api Events Latest Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/device/device_token": {
      "post": {
        "tags": [
          "auth",
          "device flow"
        ],
        "summary": "Get Device Token",
        "operationId": "get_device_token_api_auth_device_device_token_post",
        "security": [
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Client Id"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "openid",
              "title": "Scope"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/device/jwt_token": {
      "post": {
        "tags": [
          "auth",
          "device flow"
        ],
        "summary": "Get Jwt Token",
        "operationId": "get_jwt_token_api_auth_device_jwt_token_post",
        "security": [
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Client Id"
            }
          },
          {
            "name": "device_code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Code"
            }
          },
          {
            "name": "grant_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Grant Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/user": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Authorize",
        "operationId": "authorize_api_auth_user_get",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/aws_credentials": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Get Aws Credentials",
        "operationId": "get_aws_credentials_api_auth_aws_credentials_get",
        "parameters": [
          {
            "name": "data_product_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Data Product Name"
            }
          },
          {
            "name": "environment",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Environment"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AWSCredentials"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/.well-known/oauth-authorization-server": {
      "get": {
        "tags": [
          "mcp"
        ],
        "summary": "Oauth Metadata",
        "description": "OAuth 2.1 Authorization Server Metadata.",
        "operationId": "oauth_metadata__well_known_oauth_authorization_server_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/.well-known/openid-configuration": {
      "get": {
        "tags": [
          "mcp"
        ],
        "summary": "Openid Config",
        "description": "OpenID Connect Discovery endpoint.",
        "operationId": "openid_config__well_known_openid_configuration_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/.well-known/oauth-protected-resource": {
      "get": {
        "tags": [
          "mcp"
        ],
        "summary": "Oauth Protected Resource",
        "description": "OAuth 2.1 Protected Resource Metadata.",
        "operationId": "oauth_protected_resource__well_known_oauth_protected_resource_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/register": {
      "post": {
        "tags": [
          "mcp"
        ],
        "summary": "Register",
        "description": "OAuth 2.1 Dynamic Client Registration endpoint.",
        "operationId": "register_api_register_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/version": {
      "get": {
        "summary": "Get Version",
        "operationId": "get_version_api_version_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AWSCredentials": {
        "properties": {
          "AccessKeyId": {
            "type": "string",
            "title": "Accesskeyid"
          },
          "SecretAccessKey": {
            "type": "string",
            "title": "Secretaccesskey"
          },
          "SessionToken": {
            "type": "string",
            "title": "Sessiontoken"
          },
          "Expiration": {
            "type": "string",
            "format": "date-time",
            "title": "Expiration"
          }
        },
        "type": "object",
        "required": [
          "AccessKeyId",
          "SecretAccessKey",
          "SessionToken",
          "Expiration"
        ],
        "title": "AWSCredentials"
      },
      "AWSEnvironmentPlatformConfiguration": {
        "properties": {
          "account_id": {
            "type": "string",
            "title": "Account Id"
          },
          "region": {
            "type": "string",
            "title": "Region"
          },
          "can_read_from": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Can Read From"
          }
        },
        "type": "object",
        "required": [
          "account_id",
          "region",
          "can_read_from"
        ],
        "title": "AWSEnvironmentPlatformConfiguration"
      },
      "AWSGlueConfig": {
        "properties": {
          "identifier": {
            "type": "string",
            "title": "Identifier"
          },
          "database_name": {
            "type": "string",
            "title": "Database Name"
          },
          "bucket_identifier": {
            "type": "string",
            "title": "Bucket Identifier"
          },
          "s3_path": {
            "type": "string",
            "title": "S3 Path"
          }
        },
        "type": "object",
        "required": [
          "identifier",
          "database_name",
          "bucket_identifier",
          "s3_path"
        ],
        "title": "AWSGlueConfig"
      },
      "AWSS3Config": {
        "properties": {
          "identifier": {
            "type": "string",
            "title": "Identifier"
          },
          "bucket_name": {
            "type": "string",
            "title": "Bucket Name"
          },
          "bucket_arn": {
            "type": "string",
            "title": "Bucket Arn"
          },
          "kms_key_arn": {
            "type": "string",
            "title": "Kms Key Arn"
          },
          "is_default": {
            "type": "boolean",
            "title": "Is Default"
          }
        },
        "type": "object",
        "required": [
          "identifier",
          "bucket_name",
          "bucket_arn",
          "kms_key_arn",
          "is_default"
        ],
        "title": "AWSS3Config"
      },
      "AccessResponse": {
        "properties": {
          "allowed": {
            "type": "boolean",
            "title": "Allowed"
          }
        },
        "type": "object",
        "required": [
          "allowed"
        ],
        "title": "AccessResponse"
      },
      "AuthorizationAction": {
        "type": "integer",
        "enum": [
          101,
          102,
          103,
          104,
          105,
          106,
          107,
          301,
          302,
          303,
          304,
          305,
          306,
          307,
          308,
          309,
          310,
          311,
          312,
          313,
          314,
          315,
          401,
          402,
          403,
          404,
          405,
          406,
          407,
          408,
          409,
          410,
          411,
          412,
          413
        ],
        "title": "AuthorizationAction",
        "description": "The integer values for the authorization actions are stored directly in the DB.\nThis means you can change the name of the actions, but not their integer values.\nThe values for the actions are spaced on purpose, to make it easier to extend.\nThis has no technical benefit, but it makes it easier to read for developers."
      },
      "BaseDataOutputDatasetAssociationGet-Input": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "data_output_id": {
            "type": "string",
            "format": "uuid",
            "title": "Data Output Id"
          },
          "status": {
            "$ref": "#/components/schemas/DecisionStatus"
          },
          "requested_on": {
            "type": "string",
            "format": "date-time",
            "title": "Requested On"
          },
          "denied_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Denied On"
          },
          "approved_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Approved On"
          },
          "dataset": {
            "$ref": "#/components/schemas/Dataset"
          },
          "data_output": {
            "$ref": "#/components/schemas/app__data_outputs_datasets__schema_response__DataOutput-Input"
          },
          "requested_by": {
            "$ref": "#/components/schemas/User"
          },
          "denied_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "approved_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "dataset_id",
          "data_output_id",
          "status",
          "requested_on",
          "denied_on",
          "approved_on",
          "dataset",
          "data_output",
          "requested_by",
          "denied_by",
          "approved_by"
        ],
        "title": "BaseDataOutputDatasetAssociationGet"
      },
      "BaseDataOutputDatasetAssociationGet-Output": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "data_output_id": {
            "type": "string",
            "format": "uuid",
            "title": "Data Output Id"
          },
          "status": {
            "$ref": "#/components/schemas/DecisionStatus"
          },
          "requested_on": {
            "type": "string",
            "format": "date-time",
            "title": "Requested On"
          },
          "denied_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Denied On"
          },
          "approved_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Approved On"
          },
          "dataset": {
            "$ref": "#/components/schemas/Dataset"
          },
          "data_output": {
            "$ref": "#/components/schemas/app__data_outputs_datasets__schema_response__DataOutput-Output"
          },
          "requested_by": {
            "$ref": "#/components/schemas/User"
          },
          "denied_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "approved_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "dataset_id",
          "data_output_id",
          "status",
          "requested_on",
          "denied_on",
          "approved_on",
          "dataset",
          "data_output",
          "requested_by",
          "denied_by",
          "approved_by"
        ],
        "title": "BaseDataOutputDatasetAssociationGet"
      },
      "CreateRole": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "permissions": {
            "items": {
              "$ref": "#/components/schemas/AuthorizationAction"
            },
            "type": "array",
            "title": "Permissions"
          }
        },
        "type": "object",
        "required": [
          "name",
          "scope",
          "description",
          "permissions"
        ],
        "title": "CreateRole"
      },
      "DataOutputCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "namespace": {
            "type": "string",
            "title": "Namespace"
          },
          "platform_id": {
            "type": "string",
            "format": "uuid",
            "title": "Platform Id"
          },
          "service_id": {
            "type": "string",
            "format": "uuid",
            "title": "Service Id"
          },
          "status": {
            "$ref": "#/components/schemas/DataOutputStatus"
          },
          "configuration": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/S3DataOutput"
              },
              {
                "$ref": "#/components/schemas/GlueDataOutput"
              },
              {
                "$ref": "#/components/schemas/DatabricksDataOutput"
              },
              {
                "$ref": "#/components/schemas/SnowflakeDataOutput"
              },
              {
                "$ref": "#/components/schemas/RedshiftDataOutput"
              }
            ],
            "title": "Configuration",
            "discriminator": {
              "propertyName": "configuration_type",
              "mapping": {
                "DatabricksDataOutput": "#/components/schemas/DatabricksDataOutput",
                "GlueDataOutput": "#/components/schemas/GlueDataOutput",
                "RedshiftDataOutput": "#/components/schemas/RedshiftDataOutput",
                "S3DataOutput": "#/components/schemas/S3DataOutput",
                "SnowflakeDataOutput": "#/components/schemas/SnowflakeDataOutput"
              }
            }
          },
          "sourceAligned": {
            "type": "boolean",
            "title": "Sourcealigned"
          },
          "tag_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Tag Ids"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "namespace",
          "platform_id",
          "service_id",
          "status",
          "configuration",
          "sourceAligned",
          "tag_ids"
        ],
        "title": "DataOutputCreate"
      },
      "DataOutputDatasetPendingAction-Input": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "data_output_id": {
            "type": "string",
            "format": "uuid",
            "title": "Data Output Id"
          },
          "status": {
            "$ref": "#/components/schemas/DecisionStatus"
          },
          "requested_on": {
            "type": "string",
            "format": "date-time",
            "title": "Requested On"
          },
          "denied_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Denied On"
          },
          "approved_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Approved On"
          },
          "dataset": {
            "$ref": "#/components/schemas/Dataset"
          },
          "data_output": {
            "$ref": "#/components/schemas/app__data_outputs_datasets__schema_response__DataOutput-Input"
          },
          "requested_by": {
            "$ref": "#/components/schemas/User"
          },
          "denied_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "approved_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "pending_action_type": {
            "type": "string",
            "const": "DataOutputDataset",
            "title": "Pending Action Type",
            "default": "DataOutputDataset"
          }
        },
        "type": "object",
        "required": [
          "id",
          "dataset_id",
          "data_output_id",
          "status",
          "requested_on",
          "denied_on",
          "approved_on",
          "dataset",
          "data_output",
          "requested_by",
          "denied_by",
          "approved_by"
        ],
        "title": "DataOutputDatasetPendingAction"
      },
      "DataOutputDatasetPendingAction-Output": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "data_output_id": {
            "type": "string",
            "format": "uuid",
            "title": "Data Output Id"
          },
          "status": {
            "$ref": "#/components/schemas/DecisionStatus"
          },
          "requested_on": {
            "type": "string",
            "format": "date-time",
            "title": "Requested On"
          },
          "denied_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Denied On"
          },
          "approved_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Approved On"
          },
          "dataset": {
            "$ref": "#/components/schemas/Dataset"
          },
          "data_output": {
            "$ref": "#/components/schemas/app__data_outputs_datasets__schema_response__DataOutput-Output"
          },
          "requested_by": {
            "$ref": "#/components/schemas/User"
          },
          "denied_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "approved_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "pending_action_type": {
            "type": "string",
            "const": "DataOutputDataset",
            "title": "Pending Action Type",
            "default": "DataOutputDataset"
          }
        },
        "type": "object",
        "required": [
          "id",
          "dataset_id",
          "data_output_id",
          "status",
          "requested_on",
          "denied_on",
          "approved_on",
          "dataset",
          "data_output",
          "requested_by",
          "denied_by",
          "approved_by"
        ],
        "title": "DataOutputDatasetPendingAction"
      },
      "DataOutputGet": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "namespace": {
            "type": "string",
            "title": "Namespace"
          },
          "owner_id": {
            "type": "string",
            "format": "uuid",
            "title": "Owner Id"
          },
          "platform_id": {
            "type": "string",
            "format": "uuid",
            "title": "Platform Id"
          },
          "service_id": {
            "type": "string",
            "format": "uuid",
            "title": "Service Id"
          },
          "status": {
            "$ref": "#/components/schemas/DataOutputStatus"
          },
          "configuration": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/S3DataOutput"
              },
              {
                "$ref": "#/components/schemas/GlueDataOutput"
              },
              {
                "$ref": "#/components/schemas/DatabricksDataOutput"
              },
              {
                "$ref": "#/components/schemas/SnowflakeDataOutput"
              },
              {
                "$ref": "#/components/schemas/RedshiftDataOutput"
              }
            ],
            "title": "Configuration",
            "discriminator": {
              "propertyName": "configuration_type",
              "mapping": {
                "DatabricksDataOutput": "#/components/schemas/DatabricksDataOutput",
                "GlueDataOutput": "#/components/schemas/GlueDataOutput",
                "RedshiftDataOutput": "#/components/schemas/RedshiftDataOutput",
                "S3DataOutput": "#/components/schemas/S3DataOutput",
                "SnowflakeDataOutput": "#/components/schemas/SnowflakeDataOutput"
              }
            }
          },
          "owner": {
            "$ref": "#/components/schemas/DataProduct-Output"
          },
          "dataset_links": {
            "items": {
              "$ref": "#/components/schemas/DatasetLink-Output"
            },
            "type": "array",
            "title": "Dataset Links"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "type": "array",
            "title": "Tags"
          },
          "result_string": {
            "type": "string",
            "title": "Result String",
            "readOnly": true
          },
          "technical_info": {
            "items": {
              "$ref": "#/components/schemas/TechnicalInfo"
            },
            "type": "array",
            "title": "Technical Info",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "namespace",
          "owner_id",
          "platform_id",
          "service_id",
          "status",
          "configuration",
          "owner",
          "dataset_links",
          "tags",
          "result_string",
          "technical_info"
        ],
        "title": "DataOutputGet"
      },
      "DataOutputLink-Input": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "data_output_id": {
            "type": "string",
            "format": "uuid",
            "title": "Data Output Id"
          },
          "status": {
            "$ref": "#/components/schemas/DecisionStatus"
          },
          "data_output": {
            "$ref": "#/components/schemas/app__datasets__schema_response__DataOutput-Input"
          }
        },
        "type": "object",
        "required": [
          "id",
          "dataset_id",
          "data_output_id",
          "status",
          "data_output"
        ],
        "title": "DataOutputLink"
      },
      "DataOutputLink-Output": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "data_output_id": {
            "type": "string",
            "format": "uuid",
            "title": "Data Output Id"
          },
          "status": {
            "$ref": "#/components/schemas/DecisionStatus"
          },
          "data_output": {
            "$ref": "#/components/schemas/app__datasets__schema_response__DataOutput-Output"
          }
        },
        "type": "object",
        "required": [
          "id",
          "dataset_id",
          "data_output_id",
          "status",
          "data_output"
        ],
        "title": "DataOutputLink"
      },
      "DataOutputLinks-Input": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "namespace": {
            "type": "string",
            "title": "Namespace"
          },
          "owner_id": {
            "type": "string",
            "format": "uuid",
            "title": "Owner Id"
          },
          "platform_id": {
            "type": "string",
            "format": "uuid",
            "title": "Platform Id"
          },
          "service_id": {
            "type": "string",
            "format": "uuid",
            "title": "Service Id"
          },
          "status": {
            "$ref": "#/components/schemas/DataOutputStatus"
          },
          "configuration": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/S3DataOutput"
              },
              {
                "$ref": "#/components/schemas/GlueDataOutput"
              },
              {
                "$ref": "#/components/schemas/DatabricksDataOutput"
              },
              {
                "$ref": "#/components/schemas/SnowflakeDataOutput"
              },
              {
                "$ref": "#/components/schemas/RedshiftDataOutput"
              }
            ],
            "title": "Configuration",
            "discriminator": {
              "propertyName": "configuration_type",
              "mapping": {
                "DatabricksDataOutput": "#/components/schemas/DatabricksDataOutput",
                "GlueDataOutput": "#/components/schemas/GlueDataOutput",
                "RedshiftDataOutput": "#/components/schemas/RedshiftDataOutput",
                "S3DataOutput": "#/components/schemas/S3DataOutput",
                "SnowflakeDataOutput": "#/components/schemas/SnowflakeDataOutput"
              }
            }
          },
          "owner": {
            "$ref": "#/components/schemas/DataProduct-Input"
          },
          "service": {
            "$ref": "#/components/schemas/PlatformService"
          },
          "environment_configurations": {
            "items": {
              "$ref": "#/components/schemas/EnvironmentPlatformServiceConfiguration-Input"
            },
            "type": "array",
            "title": "Environment Configurations"
          },
          "dataset_links": {
            "items": {
              "$ref": "#/components/schemas/BaseDataOutputDatasetAssociationGet-Input"
            },
            "type": "array",
            "title": "Dataset Links"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "namespace",
          "owner_id",
          "platform_id",
          "service_id",
          "status",
          "configuration",
          "owner",
          "service",
          "environment_configurations",
          "dataset_links"
        ],
        "title": "DataOutputLinks"
      },
      "DataOutputLinks-Output": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "namespace": {
            "type": "string",
            "title": "Namespace"
          },
          "owner_id": {
            "type": "string",
            "format": "uuid",
            "title": "Owner Id"
          },
          "platform_id": {
            "type": "string",
            "format": "uuid",
            "title": "Platform Id"
          },
          "service_id": {
            "type": "string",
            "format": "uuid",
            "title": "Service Id"
          },
          "status": {
            "$ref": "#/components/schemas/DataOutputStatus"
          },
          "configuration": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/S3DataOutput"
              },
              {
                "$ref": "#/components/schemas/GlueDataOutput"
              },
              {
                "$ref": "#/components/schemas/DatabricksDataOutput"
              },
              {
                "$ref": "#/components/schemas/SnowflakeDataOutput"
              },
              {
                "$ref": "#/components/schemas/RedshiftDataOutput"
              }
            ],
            "title": "Configuration",
            "discriminator": {
              "propertyName": "configuration_type",
              "mapping": {
                "DatabricksDataOutput": "#/components/schemas/DatabricksDataOutput",
                "GlueDataOutput": "#/components/schemas/GlueDataOutput",
                "RedshiftDataOutput": "#/components/schemas/RedshiftDataOutput",
                "S3DataOutput": "#/components/schemas/S3DataOutput",
                "SnowflakeDataOutput": "#/components/schemas/SnowflakeDataOutput"
              }
            }
          },
          "owner": {
            "$ref": "#/components/schemas/DataProduct-Output"
          },
          "dataset_links": {
            "items": {
              "$ref": "#/components/schemas/BaseDataOutputDatasetAssociationGet-Output"
            },
            "type": "array",
            "title": "Dataset Links"
          },
          "result_string": {
            "type": "string",
            "title": "Result String",
            "readOnly": true
          },
          "technical_info": {
            "items": {
              "$ref": "#/components/schemas/TechnicalInfo"
            },
            "type": "array",
            "title": "Technical Info",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "namespace",
          "owner_id",
          "platform_id",
          "service_id",
          "status",
          "configuration",
          "owner",
          "dataset_links",
          "result_string",
          "technical_info"
        ],
        "title": "DataOutputLinks"
      },
      "DataOutputResultStringRequest": {
        "properties": {
          "platform_id": {
            "type": "string",
            "format": "uuid",
            "title": "Platform Id"
          },
          "service_id": {
            "type": "string",
            "format": "uuid",
            "title": "Service Id"
          },
          "configuration": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/S3DataOutput"
              },
              {
                "$ref": "#/components/schemas/GlueDataOutput"
              },
              {
                "$ref": "#/components/schemas/DatabricksDataOutput"
              },
              {
                "$ref": "#/components/schemas/SnowflakeDataOutput"
              },
              {
                "$ref": "#/components/schemas/RedshiftDataOutput"
              }
            ],
            "title": "Configuration",
            "discriminator": {
              "propertyName": "configuration_type",
              "mapping": {
                "DatabricksDataOutput": "#/components/schemas/DatabricksDataOutput",
                "GlueDataOutput": "#/components/schemas/GlueDataOutput",
                "RedshiftDataOutput": "#/components/schemas/RedshiftDataOutput",
                "S3DataOutput": "#/components/schemas/S3DataOutput",
                "SnowflakeDataOutput": "#/components/schemas/SnowflakeDataOutput"
              }
            }
          }
        },
        "type": "object",
        "required": [
          "platform_id",
          "service_id",
          "configuration"
        ],
        "title": "DataOutputResultStringRequest"
      },
      "DataOutputStatus": {
        "type": "string",
        "enum": [
          "pending",
          "active",
          "archived"
        ],
        "title": "DataOutputStatus"
      },
      "DataOutputStatusUpdate": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/DataOutputStatus"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "DataOutputStatusUpdate"
      },
      "DataOutputUpdate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "tag_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Tag Ids"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "tag_ids"
        ],
        "title": "DataOutputUpdate"
      },
      "DataOutputsGet-Input": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "namespace": {
            "type": "string",
            "title": "Namespace"
          },
          "owner_id": {
            "type": "string",
            "format": "uuid",
            "title": "Owner Id"
          },
          "platform_id": {
            "type": "string",
            "format": "uuid",
            "title": "Platform Id"
          },
          "service_id": {
            "type": "string",
            "format": "uuid",
            "title": "Service Id"
          },
          "status": {
            "$ref": "#/components/schemas/DataOutputStatus"
          },
          "configuration": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/S3DataOutput"
              },
              {
                "$ref": "#/components/schemas/GlueDataOutput"
              },
              {
                "$ref": "#/components/schemas/DatabricksDataOutput"
              },
              {
                "$ref": "#/components/schemas/SnowflakeDataOutput"
              },
              {
                "$ref": "#/components/schemas/RedshiftDataOutput"
              }
            ],
            "title": "Configuration",
            "discriminator": {
              "propertyName": "configuration_type",
              "mapping": {
                "DatabricksDataOutput": "#/components/schemas/DatabricksDataOutput",
                "GlueDataOutput": "#/components/schemas/GlueDataOutput",
                "RedshiftDataOutput": "#/components/schemas/RedshiftDataOutput",
                "S3DataOutput": "#/components/schemas/S3DataOutput",
                "SnowflakeDataOutput": "#/components/schemas/SnowflakeDataOutput"
              }
            }
          },
          "owner": {
            "$ref": "#/components/schemas/DataProduct-Input"
          },
          "service": {
            "$ref": "#/components/schemas/PlatformService"
          },
          "environment_configurations": {
            "items": {
              "$ref": "#/components/schemas/EnvironmentPlatformServiceConfiguration-Input"
            },
            "type": "array",
            "title": "Environment Configurations"
          },
          "dataset_links": {
            "items": {
              "$ref": "#/components/schemas/DatasetLink-Input"
            },
            "type": "array",
            "title": "Dataset Links"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "type": "array",
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "namespace",
          "owner_id",
          "platform_id",
          "service_id",
          "status",
          "configuration",
          "owner",
          "service",
          "environment_configurations",
          "dataset_links",
          "tags"
        ],
        "title": "DataOutputsGet"
      },
      "DataOutputsGet-Output": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "namespace": {
            "type": "string",
            "title": "Namespace"
          },
          "owner_id": {
            "type": "string",
            "format": "uuid",
            "title": "Owner Id"
          },
          "platform_id": {
            "type": "string",
            "format": "uuid",
            "title": "Platform Id"
          },
          "service_id": {
            "type": "string",
            "format": "uuid",
            "title": "Service Id"
          },
          "status": {
            "$ref": "#/components/schemas/DataOutputStatus"
          },
          "configuration": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/S3DataOutput"
              },
              {
                "$ref": "#/components/schemas/GlueDataOutput"
              },
              {
                "$ref": "#/components/schemas/DatabricksDataOutput"
              },
              {
                "$ref": "#/components/schemas/SnowflakeDataOutput"
              },
              {
                "$ref": "#/components/schemas/RedshiftDataOutput"
              }
            ],
            "title": "Configuration",
            "discriminator": {
              "propertyName": "configuration_type",
              "mapping": {
                "DatabricksDataOutput": "#/components/schemas/DatabricksDataOutput",
                "GlueDataOutput": "#/components/schemas/GlueDataOutput",
                "RedshiftDataOutput": "#/components/schemas/RedshiftDataOutput",
                "S3DataOutput": "#/components/schemas/S3DataOutput",
                "SnowflakeDataOutput": "#/components/schemas/SnowflakeDataOutput"
              }
            }
          },
          "owner": {
            "$ref": "#/components/schemas/DataProduct-Output"
          },
          "dataset_links": {
            "items": {
              "$ref": "#/components/schemas/DatasetLink-Output"
            },
            "type": "array",
            "title": "Dataset Links"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "type": "array",
            "title": "Tags"
          },
          "result_string": {
            "type": "string",
            "title": "Result String",
            "readOnly": true
          },
          "technical_info": {
            "items": {
              "$ref": "#/components/schemas/TechnicalInfo"
            },
            "type": "array",
            "title": "Technical Info",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "namespace",
          "owner_id",
          "platform_id",
          "service_id",
          "status",
          "configuration",
          "owner",
          "dataset_links",
          "tags",
          "result_string",
          "technical_info"
        ],
        "title": "DataOutputsGet"
      },
      "DataProduct-Input": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "namespace": {
            "type": "string",
            "title": "Namespace"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "status": {
            "$ref": "#/components/schemas/DataProductStatus"
          },
          "type": {
            "$ref": "#/components/schemas/DataProductType"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "namespace",
          "description",
          "status",
          "type"
        ],
        "title": "DataProduct"
      },
      "DataProduct-Output": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "namespace": {
            "type": "string",
            "title": "Namespace"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "status": {
            "$ref": "#/components/schemas/DataProductStatus"
          },
          "type": {
            "$ref": "#/components/schemas/DataProductType"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "namespace",
          "description",
          "status",
          "type"
        ],
        "title": "DataProduct"
      },
      "DataProductAboutUpdate": {
        "properties": {
          "about": {
            "type": "string",
            "title": "About"
          }
        },
        "type": "object",
        "required": [
          "about"
        ],
        "title": "DataProductAboutUpdate"
      },
      "DataProductCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "namespace": {
            "type": "string",
            "title": "Namespace"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "type_id": {
            "type": "string",
            "format": "uuid",
            "title": "Type Id"
          },
          "about": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "About"
          },
          "domain_id": {
            "type": "string",
            "format": "uuid",
            "title": "Domain Id"
          },
          "tag_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Tag Ids"
          },
          "lifecycle_id": {
            "type": "string",
            "format": "uuid",
            "title": "Lifecycle Id"
          },
          "owners": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "minItems": 1,
            "title": "Owners"
          }
        },
        "type": "object",
        "required": [
          "name",
          "namespace",
          "description",
          "type_id",
          "domain_id",
          "tag_ids",
          "lifecycle_id",
          "owners"
        ],
        "title": "DataProductCreate"
      },
      "DataProductDatasetPendingAction-Input": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "data_product_id": {
            "type": "string",
            "format": "uuid",
            "title": "Data Product Id"
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "status": {
            "$ref": "#/components/schemas/DecisionStatus"
          },
          "requested_on": {
            "type": "string",
            "format": "date-time",
            "title": "Requested On"
          },
          "dataset": {
            "$ref": "#/components/schemas/Dataset"
          },
          "data_product": {
            "$ref": "#/components/schemas/DataProduct-Input"
          },
          "requested_by": {
            "$ref": "#/components/schemas/User"
          },
          "denied_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "approved_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "pending_action_type": {
            "type": "string",
            "const": "DataProductDataset",
            "title": "Pending Action Type",
            "default": "DataProductDataset"
          }
        },
        "type": "object",
        "required": [
          "id",
          "data_product_id",
          "dataset_id",
          "status",
          "requested_on",
          "dataset",
          "data_product",
          "requested_by",
          "denied_by",
          "approved_by"
        ],
        "title": "DataProductDatasetPendingAction"
      },
      "DataProductDatasetPendingAction-Output": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "data_product_id": {
            "type": "string",
            "format": "uuid",
            "title": "Data Product Id"
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "status": {
            "$ref": "#/components/schemas/DecisionStatus"
          },
          "requested_on": {
            "type": "string",
            "format": "date-time",
            "title": "Requested On"
          },
          "dataset": {
            "$ref": "#/components/schemas/Dataset"
          },
          "data_product": {
            "$ref": "#/components/schemas/DataProduct-Output"
          },
          "requested_by": {
            "$ref": "#/components/schemas/User"
          },
          "denied_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "approved_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "pending_action_type": {
            "type": "string",
            "const": "DataProductDataset",
            "title": "Pending Action Type",
            "default": "DataProductDataset"
          }
        },
        "type": "object",
        "required": [
          "id",
          "data_product_id",
          "dataset_id",
          "status",
          "requested_on",
          "dataset",
          "data_product",
          "requested_by",
          "denied_by",
          "approved_by"
        ],
        "title": "DataProductDatasetPendingAction"
      },
      "DataProductGet": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "namespace": {
            "type": "string",
            "title": "Namespace"
          },
          "status": {
            "$ref": "#/components/schemas/DataProductStatus"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "type": "array",
            "title": "Tags"
          },
          "usage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Usage"
          },
          "domain": {
            "$ref": "#/components/schemas/Domain"
          },
          "type": {
            "$ref": "#/components/schemas/DataProductType"
          },
          "lifecycle": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DataProductLifeCycle"
              },
              {
                "type": "null"
              }
            ]
          },
          "data_product_settings": {
            "items": {
              "$ref": "#/components/schemas/DataProductSettingValue-Output"
            },
            "type": "array",
            "title": "Data Product Settings"
          },
          "about": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "About"
          },
          "dataset_links": {
            "items": {
              "$ref": "#/components/schemas/DatasetLinks-Output"
            },
            "type": "array",
            "title": "Dataset Links"
          },
          "data_outputs": {
            "items": {
              "$ref": "#/components/schemas/DataOutputLinks-Output"
            },
            "type": "array",
            "title": "Data Outputs"
          },
          "datasets": {
            "items": {
              "$ref": "#/components/schemas/Dataset"
            },
            "type": "array",
            "title": "Datasets"
          },
          "rolled_up_tags": {
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "type": "array",
            "uniqueItems": true,
            "title": "Rolled Up Tags"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "namespace",
          "status",
          "tags",
          "usage",
          "domain",
          "type",
          "lifecycle",
          "data_product_settings",
          "about",
          "dataset_links",
          "data_outputs",
          "datasets",
          "rolled_up_tags"
        ],
        "title": "DataProductGet"
      },
      "DataProductIconKey": {
        "type": "string",
        "enum": [
          "reporting",
          "processing",
          "exploration",
          "ingestion",
          "machine_learning",
          "analytics",
          "default"
        ],
        "title": "DataProductIconKey"
      },
      "DataProductLifeCycle": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "value": {
            "type": "integer",
            "title": "Value"
          },
          "color": {
            "type": "string",
            "title": "Color"
          },
          "is_default": {
            "type": "boolean",
            "title": "Is Default"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "value",
          "color",
          "is_default"
        ],
        "title": "DataProductLifeCycle"
      },
      "DataProductLifeCycleCreate": {
        "properties": {
          "value": {
            "type": "integer",
            "title": "Value"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "color": {
            "type": "string",
            "title": "Color"
          },
          "is_default": {
            "type": "boolean",
            "title": "Is Default",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "value",
          "name",
          "color"
        ],
        "title": "DataProductLifeCycleCreate"
      },
      "DataProductLifeCycleUpdate": {
        "properties": {
          "value": {
            "type": "integer",
            "title": "Value"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "color": {
            "type": "string",
            "title": "Color"
          },
          "is_default": {
            "type": "boolean",
            "title": "Is Default",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "value",
          "name",
          "color"
        ],
        "title": "DataProductLifeCycleUpdate"
      },
      "DataProductLifeCyclesGet": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "value": {
            "type": "integer",
            "title": "Value"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "color": {
            "type": "string",
            "title": "Color"
          },
          "is_default": {
            "type": "boolean",
            "title": "Is Default"
          }
        },
        "type": "object",
        "required": [
          "id",
          "value",
          "name",
          "color",
          "is_default"
        ],
        "title": "DataProductLifeCyclesGet"
      },
      "DataProductLink-Input": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "data_product_id": {
            "type": "string",
            "format": "uuid",
            "title": "Data Product Id"
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "status": {
            "$ref": "#/components/schemas/DecisionStatus"
          },
          "data_product": {
            "$ref": "#/components/schemas/DataProduct-Input"
          }
        },
        "type": "object",
        "required": [
          "id",
          "data_product_id",
          "dataset_id",
          "status",
          "data_product"
        ],
        "title": "DataProductLink"
      },
      "DataProductLink-Output": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "data_product_id": {
            "type": "string",
            "format": "uuid",
            "title": "Data Product Id"
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "status": {
            "$ref": "#/components/schemas/DecisionStatus"
          },
          "data_product": {
            "$ref": "#/components/schemas/DataProduct-Output"
          }
        },
        "type": "object",
        "required": [
          "id",
          "data_product_id",
          "dataset_id",
          "status",
          "data_product"
        ],
        "title": "DataProductLink"
      },
      "DataProductRoleAssignmentPendingAction-Input": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "data_product": {
            "$ref": "#/components/schemas/DataProduct-Input"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Role"
              },
              {
                "type": "null"
              }
            ]
          },
          "decision": {
            "$ref": "#/components/schemas/DecisionStatus"
          },
          "requested_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requested On"
          },
          "requested_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "decided_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Decided On"
          },
          "decided_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "pending_action_type": {
            "type": "string",
            "const": "DataProductRoleAssignment",
            "title": "Pending Action Type",
            "default": "DataProductRoleAssignment"
          }
        },
        "type": "object",
        "required": [
          "id",
          "data_product",
          "user",
          "role",
          "decision",
          "requested_on",
          "requested_by",
          "decided_on",
          "decided_by"
        ],
        "title": "DataProductRoleAssignmentPendingAction"
      },
      "DataProductRoleAssignmentPendingAction-Output": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "data_product": {
            "$ref": "#/components/schemas/DataProduct-Output"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Role"
              },
              {
                "type": "null"
              }
            ]
          },
          "decision": {
            "$ref": "#/components/schemas/DecisionStatus"
          },
          "requested_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requested On"
          },
          "requested_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "decided_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Decided On"
          },
          "decided_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "pending_action_type": {
            "type": "string",
            "const": "DataProductRoleAssignment",
            "title": "Pending Action Type",
            "default": "DataProductRoleAssignment"
          }
        },
        "type": "object",
        "required": [
          "id",
          "data_product",
          "user",
          "role",
          "decision",
          "requested_on",
          "requested_by",
          "decided_on",
          "decided_by"
        ],
        "title": "DataProductRoleAssignmentPendingAction"
      },
      "DataProductSetting": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "category": {
            "type": "string",
            "title": "Category"
          },
          "type": {
            "$ref": "#/components/schemas/DataProductSettingType"
          },
          "tooltip": {
            "type": "string",
            "title": "Tooltip"
          },
          "namespace": {
            "type": "string",
            "title": "Namespace"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "default": {
            "type": "string",
            "title": "Default"
          },
          "order": {
            "type": "integer",
            "title": "Order",
            "default": 100
          },
          "scope": {
            "$ref": "#/components/schemas/DataProductSettingScope"
          }
        },
        "type": "object",
        "required": [
          "id",
          "category",
          "type",
          "tooltip",
          "namespace",
          "name",
          "default",
          "scope"
        ],
        "title": "DataProductSetting"
      },
      "DataProductSettingCreate": {
        "properties": {
          "category": {
            "type": "string",
            "title": "Category"
          },
          "type": {
            "$ref": "#/components/schemas/DataProductSettingType"
          },
          "tooltip": {
            "type": "string",
            "title": "Tooltip"
          },
          "namespace": {
            "type": "string",
            "title": "Namespace"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "default": {
            "type": "string",
            "title": "Default"
          },
          "order": {
            "type": "integer",
            "title": "Order",
            "default": 100
          },
          "scope": {
            "$ref": "#/components/schemas/DataProductSettingScope"
          }
        },
        "type": "object",
        "required": [
          "category",
          "type",
          "tooltip",
          "namespace",
          "name",
          "default",
          "scope"
        ],
        "title": "DataProductSettingCreate"
      },
      "DataProductSettingScope": {
        "type": "string",
        "enum": [
          "dataproduct",
          "dataset"
        ],
        "title": "DataProductSettingScope"
      },
      "DataProductSettingType": {
        "type": "string",
        "enum": [
          "checkbox",
          "tags",
          "input"
        ],
        "title": "DataProductSettingType"
      },
      "DataProductSettingUpdate": {
        "properties": {
          "category": {
            "type": "string",
            "title": "Category"
          },
          "type": {
            "$ref": "#/components/schemas/DataProductSettingType"
          },
          "tooltip": {
            "type": "string",
            "title": "Tooltip"
          },
          "namespace": {
            "type": "string",
            "title": "Namespace"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "default": {
            "type": "string",
            "title": "Default"
          },
          "order": {
            "type": "integer",
            "title": "Order",
            "default": 100
          },
          "scope": {
            "$ref": "#/components/schemas/DataProductSettingScope"
          }
        },
        "type": "object",
        "required": [
          "category",
          "type",
          "tooltip",
          "namespace",
          "name",
          "default",
          "scope"
        ],
        "title": "DataProductSettingUpdate"
      },
      "DataProductSettingValue-Input": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "data_product_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Product Id"
          },
          "dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Id"
          },
          "data_product_setting_id": {
            "type": "string",
            "format": "uuid",
            "title": "Data Product Setting Id"
          },
          "value": {
            "type": "string",
            "title": "Value"
          },
          "data_product_setting": {
            "$ref": "#/components/schemas/DataProductSetting"
          }
        },
        "type": "object",
        "required": [
          "id",
          "data_product_setting_id",
          "value",
          "data_product_setting"
        ],
        "title": "DataProductSettingValue"
      },
      "DataProductSettingValue-Output": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "data_product_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Product Id"
          },
          "dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Id"
          },
          "data_product_setting_id": {
            "type": "string",
            "format": "uuid",
            "title": "Data Product Setting Id"
          },
          "value": {
            "type": "string",
            "title": "Value"
          },
          "data_product_setting": {
            "$ref": "#/components/schemas/DataProductSetting"
          }
        },
        "type": "object",
        "required": [
          "id",
          "data_product_setting_id",
          "value",
          "data_product_setting"
        ],
        "title": "DataProductSettingValue"
      },
      "DataProductSettingsGet": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "category": {
            "type": "string",
            "title": "Category"
          },
          "type": {
            "$ref": "#/components/schemas/DataProductSettingType"
          },
          "tooltip": {
            "type": "string",
            "title": "Tooltip"
          },
          "namespace": {
            "type": "string",
            "title": "Namespace"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "default": {
            "type": "string",
            "title": "Default"
          },
          "order": {
            "type": "integer",
            "title": "Order",
            "default": 100
          },
          "scope": {
            "$ref": "#/components/schemas/DataProductSettingScope"
          }
        },
        "type": "object",
        "required": [
          "id",
          "category",
          "type",
          "tooltip",
          "namespace",
          "name",
          "default",
          "scope"
        ],
        "title": "DataProductSettingsGet"
      },
      "DataProductStatus": {
        "type": "string",
        "enum": [
          "pending",
          "active",
          "archived"
        ],
        "title": "DataProductStatus"
      },
      "DataProductStatusUpdate": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/DataProductStatus"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "DataProductStatusUpdate"
      },
      "DataProductType": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "icon_key": {
            "$ref": "#/components/schemas/DataProductIconKey"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "icon_key"
        ],
        "title": "DataProductType"
      },
      "DataProductTypeCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "icon_key": {
            "$ref": "#/components/schemas/DataProductIconKey"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "icon_key"
        ],
        "title": "DataProductTypeCreate"
      },
      "DataProductTypeGet": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "icon_key": {
            "$ref": "#/components/schemas/DataProductIconKey"
          },
          "data_products": {
            "items": {
              "$ref": "#/components/schemas/DataProduct-Output"
            },
            "type": "array",
            "title": "Data Products"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "icon_key",
          "data_products"
        ],
        "title": "DataProductTypeGet"
      },
      "DataProductTypeUpdate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "icon_key": {
            "$ref": "#/components/schemas/DataProductIconKey"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "icon_key"
        ],
        "title": "DataProductTypeUpdate"
      },
      "DataProductTypesGet": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "icon_key": {
            "$ref": "#/components/schemas/DataProductIconKey"
          },
          "data_product_count": {
            "type": "integer",
            "title": "Data Product Count"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "icon_key",
          "data_product_count"
        ],
        "title": "DataProductTypesGet"
      },
      "DataProductUpdate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "namespace": {
            "type": "string",
            "title": "Namespace"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "type_id": {
            "type": "string",
            "format": "uuid",
            "title": "Type Id"
          },
          "about": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "About"
          },
          "domain_id": {
            "type": "string",
            "format": "uuid",
            "title": "Domain Id"
          },
          "tag_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Tag Ids"
          },
          "lifecycle_id": {
            "type": "string",
            "format": "uuid",
            "title": "Lifecycle Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "namespace",
          "description",
          "type_id",
          "domain_id",
          "tag_ids",
          "lifecycle_id"
        ],
        "title": "DataProductUpdate"
      },
      "DataProductUsageUpdate": {
        "properties": {
          "usage": {
            "type": "string",
            "title": "Usage"
          }
        },
        "type": "object",
        "required": [
          "usage"
        ],
        "title": "DataProductUsageUpdate"
      },
      "DataProductsGet-Input": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "namespace": {
            "type": "string",
            "title": "Namespace"
          },
          "status": {
            "$ref": "#/components/schemas/DataProductStatus"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "type": "array",
            "title": "Tags"
          },
          "usage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Usage"
          },
          "domain": {
            "$ref": "#/components/schemas/Domain"
          },
          "type": {
            "$ref": "#/components/schemas/DataProductType"
          },
          "lifecycle": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DataProductLifeCycle"
              },
              {
                "type": "null"
              }
            ]
          },
          "data_product_settings": {
            "items": {
              "$ref": "#/components/schemas/DataProductSettingValue-Input"
            },
            "type": "array",
            "title": "Data Product Settings"
          },
          "user_count": {
            "type": "integer",
            "title": "User Count"
          },
          "dataset_count": {
            "type": "integer",
            "title": "Dataset Count"
          },
          "data_outputs_count": {
            "type": "integer",
            "title": "Data Outputs Count"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "namespace",
          "status",
          "tags",
          "usage",
          "domain",
          "type",
          "lifecycle",
          "data_product_settings",
          "user_count",
          "dataset_count",
          "data_outputs_count"
        ],
        "title": "DataProductsGet"
      },
      "DataProductsGet-Output": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "namespace": {
            "type": "string",
            "title": "Namespace"
          },
          "status": {
            "$ref": "#/components/schemas/DataProductStatus"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "type": "array",
            "title": "Tags"
          },
          "usage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Usage"
          },
          "domain": {
            "$ref": "#/components/schemas/Domain"
          },
          "type": {
            "$ref": "#/components/schemas/DataProductType"
          },
          "lifecycle": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DataProductLifeCycle"
              },
              {
                "type": "null"
              }
            ]
          },
          "data_product_settings": {
            "items": {
              "$ref": "#/components/schemas/DataProductSettingValue-Output"
            },
            "type": "array",
            "title": "Data Product Settings"
          },
          "user_count": {
            "type": "integer",
            "title": "User Count"
          },
          "dataset_count": {
            "type": "integer",
            "title": "Dataset Count"
          },
          "data_outputs_count": {
            "type": "integer",
            "title": "Data Outputs Count"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "namespace",
          "status",
          "tags",
          "usage",
          "domain",
          "type",
          "lifecycle",
          "data_product_settings",
          "user_count",
          "dataset_count",
          "data_outputs_count"
        ],
        "title": "DataProductsGet"
      },
      "DatabricksConfig": {
        "properties": {
          "identifier": {
            "type": "string",
            "title": "Identifier"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "identifier"
        ],
        "title": "DatabricksConfig"
      },
      "DatabricksDataOutput": {
        "properties": {
          "configuration_type": {
            "type": "string",
            "const": "DatabricksDataOutput",
            "title": "Configuration Type"
          },
          "catalog": {
            "type": "string",
            "title": "Catalog"
          },
          "schema": {
            "type": "string",
            "title": "Schema",
            "default": ""
          },
          "table": {
            "type": "string",
            "title": "Table",
            "default": "*"
          },
          "bucket_identifier": {
            "type": "string",
            "title": "Bucket Identifier",
            "default": ""
          },
          "catalog_path": {
            "type": "string",
            "title": "Catalog Path",
            "default": ""
          },
          "table_path": {
            "type": "string",
            "title": "Table Path",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "configuration_type",
          "catalog"
        ],
        "title": "DatabricksDataOutput"
      },
      "DatabricksEnvironmentPlatformConfiguration": {
        "properties": {
          "workspace_urls": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Workspace Urls"
          },
          "account_id": {
            "type": "string",
            "title": "Account Id"
          },
          "metastore_id": {
            "type": "string",
            "title": "Metastore Id"
          },
          "credential_name": {
            "type": "string",
            "title": "Credential Name"
          }
        },
        "type": "object",
        "required": [
          "workspace_urls",
          "account_id",
          "metastore_id",
          "credential_name"
        ],
        "title": "DatabricksEnvironmentPlatformConfiguration"
      },
      "Dataset": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "namespace": {
            "type": "string",
            "title": "Namespace"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "status": {
            "$ref": "#/components/schemas/DatasetStatus"
          },
          "access_type": {
            "$ref": "#/components/schemas/DatasetAccessType"
          },
          "data_product_id": {
            "type": "string",
            "format": "uuid",
            "title": "Data Product Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "namespace",
          "description",
          "status",
          "access_type",
          "data_product_id"
        ],
        "title": "Dataset"
      },
      "DatasetAboutUpdate": {
        "properties": {
          "about": {
            "type": "string",
            "title": "About"
          }
        },
        "type": "object",
        "required": [
          "about"
        ],
        "title": "DatasetAboutUpdate"
      },
      "DatasetAccessType": {
        "type": "string",
        "enum": [
          "public",
          "restricted",
          "private"
        ],
        "title": "DatasetAccessType"
      },
      "DatasetCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "namespace": {
            "type": "string",
            "title": "Namespace"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "access_type": {
            "$ref": "#/components/schemas/DatasetAccessType"
          },
          "about": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "About"
          },
          "lifecycle_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lifecycle Id"
          },
          "domain_id": {
            "type": "string",
            "format": "uuid",
            "title": "Domain Id"
          },
          "tag_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Tag Ids"
          },
          "data_product_id": {
            "type": "string",
            "format": "uuid",
            "title": "Data Product Id"
          },
          "owners": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "minItems": 1,
            "title": "Owners"
          }
        },
        "type": "object",
        "required": [
          "name",
          "namespace",
          "description",
          "access_type",
          "domain_id",
          "tag_ids",
          "data_product_id",
          "owners"
        ],
        "title": "DatasetCreate"
      },
      "DatasetGet": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "namespace": {
            "type": "string",
            "title": "Namespace"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "status": {
            "$ref": "#/components/schemas/DatasetStatus"
          },
          "usage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Usage"
          },
          "access_type": {
            "$ref": "#/components/schemas/DatasetAccessType"
          },
          "data_product_id": {
            "type": "string",
            "format": "uuid",
            "title": "Data Product Id"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "type": "array",
            "title": "Tags"
          },
          "domain": {
            "$ref": "#/components/schemas/Domain"
          },
          "lifecycle": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DataProductLifeCycle"
              },
              {
                "type": "null"
              }
            ]
          },
          "data_product_settings": {
            "items": {
              "$ref": "#/components/schemas/DataProductSettingValue-Output"
            },
            "type": "array",
            "title": "Data Product Settings"
          },
          "data_output_links": {
            "items": {
              "$ref": "#/components/schemas/DataOutputLink-Output"
            },
            "type": "array",
            "title": "Data Output Links"
          },
          "about": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "About"
          },
          "data_product_links": {
            "items": {
              "$ref": "#/components/schemas/DataProductLink-Output"
            },
            "type": "array",
            "title": "Data Product Links"
          },
          "rolled_up_tags": {
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "type": "array",
            "uniqueItems": true,
            "title": "Rolled Up Tags"
          }
        },
        "type": "object",
        "required": [
          "id",
          "namespace",
          "name",
          "description",
          "status",
          "usage",
          "access_type",
          "data_product_id",
          "tags",
          "domain",
          "lifecycle",
          "data_product_settings",
          "data_output_links",
          "about",
          "data_product_links",
          "rolled_up_tags"
        ],
        "title": "DatasetGet"
      },
      "DatasetLink-Input": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "data_output_id": {
            "type": "string",
            "format": "uuid",
            "title": "Data Output Id"
          },
          "status": {
            "$ref": "#/components/schemas/DecisionStatus"
          },
          "dataset": {
            "$ref": "#/components/schemas/Dataset"
          }
        },
        "type": "object",
        "required": [
          "id",
          "dataset_id",
          "data_output_id",
          "status",
          "dataset"
        ],
        "title": "DatasetLink"
      },
      "DatasetLink-Output": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "data_output_id": {
            "type": "string",
            "format": "uuid",
            "title": "Data Output Id"
          },
          "status": {
            "$ref": "#/components/schemas/DecisionStatus"
          },
          "dataset": {
            "$ref": "#/components/schemas/Dataset"
          }
        },
        "type": "object",
        "required": [
          "id",
          "dataset_id",
          "data_output_id",
          "status",
          "dataset"
        ],
        "title": "DatasetLink"
      },
      "DatasetLinks-Input": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "data_product_id": {
            "type": "string",
            "format": "uuid",
            "title": "Data Product Id"
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "status": {
            "$ref": "#/components/schemas/DecisionStatus"
          },
          "dataset": {
            "$ref": "#/components/schemas/Dataset"
          }
        },
        "type": "object",
        "required": [
          "id",
          "data_product_id",
          "dataset_id",
          "status",
          "dataset"
        ],
        "title": "DatasetLinks"
      },
      "DatasetLinks-Output": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "data_product_id": {
            "type": "string",
            "format": "uuid",
            "title": "Data Product Id"
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "status": {
            "$ref": "#/components/schemas/DecisionStatus"
          },
          "dataset": {
            "$ref": "#/components/schemas/Dataset"
          }
        },
        "type": "object",
        "required": [
          "id",
          "data_product_id",
          "dataset_id",
          "status",
          "dataset"
        ],
        "title": "DatasetLinks"
      },
      "DatasetStatus": {
        "type": "string",
        "enum": [
          "pending",
          "active",
          "archived"
        ],
        "title": "DatasetStatus"
      },
      "DatasetStatusUpdate": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/DatasetStatus"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "DatasetStatusUpdate"
      },
      "DatasetUpdate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "namespace": {
            "type": "string",
            "title": "Namespace"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "access_type": {
            "$ref": "#/components/schemas/DatasetAccessType"
          },
          "about": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "About"
          },
          "lifecycle_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lifecycle Id"
          },
          "domain_id": {
            "type": "string",
            "format": "uuid",
            "title": "Domain Id"
          },
          "tag_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Tag Ids"
          }
        },
        "type": "object",
        "required": [
          "name",
          "namespace",
          "description",
          "access_type",
          "domain_id",
          "tag_ids"
        ],
        "title": "DatasetUpdate"
      },
      "DatasetUsageUpdate": {
        "properties": {
          "usage": {
            "type": "string",
            "title": "Usage"
          }
        },
        "type": "object",
        "required": [
          "usage"
        ],
        "title": "DatasetUsageUpdate"
      },
      "DatasetsGet-Input": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "namespace": {
            "type": "string",
            "title": "Namespace"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "status": {
            "$ref": "#/components/schemas/DatasetStatus"
          },
          "usage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Usage"
          },
          "access_type": {
            "$ref": "#/components/schemas/DatasetAccessType"
          },
          "data_product_id": {
            "type": "string",
            "format": "uuid",
            "title": "Data Product Id"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "type": "array",
            "title": "Tags"
          },
          "domain": {
            "$ref": "#/components/schemas/Domain"
          },
          "lifecycle": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DataProductLifeCycle"
              },
              {
                "type": "null"
              }
            ]
          },
          "data_product_settings": {
            "items": {
              "$ref": "#/components/schemas/DataProductSettingValue-Input"
            },
            "type": "array",
            "title": "Data Product Settings"
          },
          "data_output_links": {
            "items": {
              "$ref": "#/components/schemas/DataOutputLink-Input"
            },
            "type": "array",
            "title": "Data Output Links"
          },
          "data_product_count": {
            "type": "integer",
            "title": "Data Product Count"
          },
          "data_product_name": {
            "type": "string",
            "title": "Data Product Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "namespace",
          "name",
          "description",
          "status",
          "usage",
          "access_type",
          "data_product_id",
          "tags",
          "domain",
          "lifecycle",
          "data_product_settings",
          "data_output_links",
          "data_product_count",
          "data_product_name"
        ],
        "title": "DatasetsGet"
      },
      "DatasetsGet-Output": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "namespace": {
            "type": "string",
            "title": "Namespace"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "status": {
            "$ref": "#/components/schemas/DatasetStatus"
          },
          "usage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Usage"
          },
          "access_type": {
            "$ref": "#/components/schemas/DatasetAccessType"
          },
          "data_product_id": {
            "type": "string",
            "format": "uuid",
            "title": "Data Product Id"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "type": "array",
            "title": "Tags"
          },
          "domain": {
            "$ref": "#/components/schemas/Domain"
          },
          "lifecycle": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DataProductLifeCycle"
              },
              {
                "type": "null"
              }
            ]
          },
          "data_product_settings": {
            "items": {
              "$ref": "#/components/schemas/DataProductSettingValue-Output"
            },
            "type": "array",
            "title": "Data Product Settings"
          },
          "data_output_links": {
            "items": {
              "$ref": "#/components/schemas/DataOutputLink-Output"
            },
            "type": "array",
            "title": "Data Output Links"
          },
          "data_product_count": {
            "type": "integer",
            "title": "Data Product Count"
          },
          "data_product_name": {
            "type": "string",
            "title": "Data Product Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "namespace",
          "name",
          "description",
          "status",
          "usage",
          "access_type",
          "data_product_id",
          "tags",
          "domain",
          "lifecycle",
          "data_product_settings",
          "data_output_links",
          "data_product_count",
          "data_product_name"
        ],
        "title": "DatasetsGet"
      },
      "DecisionStatus": {
        "type": "string",
        "enum": [
          "approved",
          "pending",
          "denied"
        ],
        "title": "DecisionStatus"
      },
      "Domain": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description"
        ],
        "title": "Domain"
      },
      "DomainCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description"
        ],
        "title": "DomainCreate"
      },
      "DomainGet": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "data_products": {
            "items": {
              "$ref": "#/components/schemas/DataProduct-Output"
            },
            "type": "array",
            "title": "Data Products"
          },
          "datasets": {
            "items": {
              "$ref": "#/components/schemas/Dataset"
            },
            "type": "array",
            "title": "Datasets"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "data_products",
          "datasets"
        ],
        "title": "DomainGet"
      },
      "DomainUpdate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description"
        ],
        "title": "DomainUpdate"
      },
      "DomainsGet": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "data_product_count": {
            "type": "integer",
            "title": "Data Product Count"
          },
          "dataset_count": {
            "type": "integer",
            "title": "Dataset Count"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "data_product_count",
          "dataset_count"
        ],
        "title": "DomainsGet"
      },
      "Edge": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "Id"
          },
          "source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "Source"
          },
          "target": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "Target"
          },
          "animated": {
            "type": "boolean",
            "title": "Animated"
          },
          "sourceHandle": {
            "type": "string",
            "title": "Sourcehandle",
            "default": "right_s"
          },
          "targetHandle": {
            "type": "string",
            "title": "Targethandle",
            "default": "left_t"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source",
          "target",
          "animated"
        ],
        "title": "Edge"
      },
      "Environment": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "acronym": {
            "type": "string",
            "title": "Acronym"
          },
          "context": {
            "type": "string",
            "title": "Context"
          },
          "is_default": {
            "type": "boolean",
            "title": "Is Default",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "acronym",
          "context"
        ],
        "title": "Environment"
      },
      "EnvironmentPlatformConfiguration": {
        "properties": {
          "config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AWSEnvironmentPlatformConfiguration"
              },
              {
                "$ref": "#/components/schemas/DatabricksEnvironmentPlatformConfiguration"
              }
            ],
            "title": "Config"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "environment": {
            "$ref": "#/components/schemas/Environment"
          },
          "platform": {
            "$ref": "#/components/schemas/Platform"
          }
        },
        "type": "object",
        "required": [
          "config",
          "id",
          "environment",
          "platform"
        ],
        "title": "EnvironmentPlatformConfiguration"
      },
      "EnvironmentPlatformServiceConfiguration-Input": {
        "properties": {
          "config": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/AWSS3Config"
                },
                {
                  "$ref": "#/components/schemas/AWSGlueConfig"
                },
                {
                  "$ref": "#/components/schemas/DatabricksConfig"
                },
                {
                  "$ref": "#/components/schemas/SnowflakeConfig"
                },
                {
                  "$ref": "#/components/schemas/RedshiftConfig"
                }
              ]
            },
            "type": "array",
            "title": "Config"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "platform": {
            "$ref": "#/components/schemas/Platform"
          },
          "environment": {
            "$ref": "#/components/schemas/Environment"
          },
          "service": {
            "$ref": "#/components/schemas/PlatformService"
          }
        },
        "type": "object",
        "required": [
          "config",
          "id",
          "platform",
          "environment",
          "service"
        ],
        "title": "EnvironmentPlatformServiceConfiguration"
      },
      "EnvironmentPlatformServiceConfiguration-Output": {
        "properties": {
          "config": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/AWSS3Config"
                },
                {
                  "$ref": "#/components/schemas/AWSGlueConfig"
                },
                {
                  "$ref": "#/components/schemas/DatabricksConfig"
                },
                {
                  "$ref": "#/components/schemas/SnowflakeConfig"
                },
                {
                  "$ref": "#/components/schemas/RedshiftConfig"
                }
              ]
            },
            "type": "array",
            "title": "Config"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "platform": {
            "$ref": "#/components/schemas/Platform"
          },
          "environment": {
            "$ref": "#/components/schemas/Environment"
          },
          "service": {
            "$ref": "#/components/schemas/PlatformService"
          }
        },
        "type": "object",
        "required": [
          "config",
          "id",
          "platform",
          "environment",
          "service"
        ],
        "title": "EnvironmentPlatformServiceConfiguration"
      },
      "EventGet-Input": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "subject_id": {
            "type": "string",
            "format": "uuid",
            "title": "Subject Id"
          },
          "target_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Id"
          },
          "subject_type": {
            "$ref": "#/components/schemas/EventReferenceEntity"
          },
          "target_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EventReferenceEntity"
              },
              {
                "type": "null"
              }
            ]
          },
          "actor_id": {
            "type": "string",
            "format": "uuid",
            "title": "Actor Id"
          },
          "created_on": {
            "type": "string",
            "format": "date-time",
            "title": "Created On"
          },
          "deleted_subject_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted Subject Identifier"
          },
          "deleted_target_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted Target Identifier"
          },
          "actor": {
            "$ref": "#/components/schemas/User"
          },
          "data_product": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DataProduct-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "dataset": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Dataset"
              },
              {
                "type": "null"
              }
            ]
          },
          "data_output": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/app__data_outputs__schema__DataOutput"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "subject_id",
          "subject_type",
          "actor_id",
          "created_on",
          "actor"
        ],
        "title": "EventGet"
      },
      "EventGet-Output": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "subject_id": {
            "type": "string",
            "format": "uuid",
            "title": "Subject Id"
          },
          "target_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Id"
          },
          "subject_type": {
            "$ref": "#/components/schemas/EventReferenceEntity"
          },
          "target_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EventReferenceEntity"
              },
              {
                "type": "null"
              }
            ]
          },
          "actor_id": {
            "type": "string",
            "format": "uuid",
            "title": "Actor Id"
          },
          "created_on": {
            "type": "string",
            "format": "date-time",
            "title": "Created On"
          },
          "deleted_subject_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted Subject Identifier"
          },
          "deleted_target_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted Target Identifier"
          },
          "actor": {
            "$ref": "#/components/schemas/User"
          },
          "data_product": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DataProduct-Output"
              },
              {
                "type": "null"
              }
            ]
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "dataset": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Dataset"
              },
              {
                "type": "null"
              }
            ]
          },
          "data_output": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/app__data_outputs__schema__DataOutput"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "subject_id",
          "subject_type",
          "actor_id",
          "created_on",
          "actor"
        ],
        "title": "EventGet"
      },
      "EventReferenceEntity": {
        "type": "string",
        "enum": [
          "data_product",
          "dataset",
          "data_output",
          "user"
        ],
        "title": "EventReferenceEntity"
      },
      "GlueDataOutput": {
        "properties": {
          "configuration_type": {
            "type": "string",
            "const": "GlueDataOutput",
            "title": "Configuration Type"
          },
          "database": {
            "type": "string",
            "title": "Database"
          },
          "database_suffix": {
            "type": "string",
            "title": "Database Suffix",
            "default": ""
          },
          "table": {
            "type": "string",
            "title": "Table",
            "default": "*"
          },
          "bucket_identifier": {
            "type": "string",
            "title": "Bucket Identifier",
            "default": ""
          },
          "database_path": {
            "type": "string",
            "title": "Database Path",
            "default": ""
          },
          "table_path": {
            "type": "string",
            "title": "Table Path",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "configuration_type",
          "database"
        ],
        "title": "GlueDataOutput"
      },
      "Graph": {
        "properties": {
          "edges": {
            "items": {
              "$ref": "#/components/schemas/Edge"
            },
            "type": "array",
            "uniqueItems": true,
            "title": "Edges"
          },
          "nodes": {
            "items": {
              "$ref": "#/components/schemas/Node-Output"
            },
            "type": "array",
            "uniqueItems": true,
            "title": "Nodes"
          }
        },
        "type": "object",
        "required": [
          "edges",
          "nodes"
        ],
        "title": "Graph"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "LinkDatasetsToDataProduct": {
        "properties": {
          "dataset_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Dataset Ids"
          }
        },
        "type": "object",
        "required": [
          "dataset_ids"
        ],
        "title": "LinkDatasetsToDataProduct"
      },
      "LinkDatasetsToDataProductPost": {
        "properties": {
          "dataset_links": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Dataset Links"
          }
        },
        "type": "object",
        "required": [
          "dataset_links"
        ],
        "title": "LinkDatasetsToDataProductPost"
      },
      "NamespaceLengthLimits": {
        "properties": {
          "max_length": {
            "type": "integer",
            "title": "Max Length"
          }
        },
        "type": "object",
        "required": [
          "max_length"
        ],
        "title": "NamespaceLengthLimits"
      },
      "NamespaceSuggestion": {
        "properties": {
          "namespace": {
            "type": "string",
            "title": "Namespace"
          }
        },
        "type": "object",
        "required": [
          "namespace"
        ],
        "title": "NamespaceSuggestion"
      },
      "NamespaceValidation": {
        "properties": {
          "validity": {
            "$ref": "#/components/schemas/NamespaceValidityType"
          }
        },
        "type": "object",
        "required": [
          "validity"
        ],
        "title": "NamespaceValidation"
      },
      "NamespaceValidityType": {
        "type": "string",
        "enum": [
          "VALID",
          "INVALID_LENGTH",
          "INVALID_CHARACTERS",
          "DUPLICATE_NAMESPACE"
        ],
        "title": "NamespaceValidityType"
      },
      "Node-Input": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "Id"
          },
          "data": {
            "$ref": "#/components/schemas/NodeData-Input"
          },
          "type": {
            "$ref": "#/components/schemas/NodeType"
          },
          "isMain": {
            "type": "boolean",
            "title": "Ismain",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "id",
          "data",
          "type"
        ],
        "title": "Node"
      },
      "Node-Output": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "Id"
          },
          "data": {
            "$ref": "#/components/schemas/NodeData-Output"
          },
          "type": {
            "$ref": "#/components/schemas/NodeType"
          },
          "isMain": {
            "type": "boolean",
            "title": "Ismain",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "id",
          "data",
          "type"
        ],
        "title": "Node"
      },
      "NodeData-Input": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "link_to_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link To Id"
          },
          "icon_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon Key"
          },
          "domain": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Domain"
          },
          "domain_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Domain Id"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "assignments": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/app__role_assignments__data_product__schema__RoleAssignment-Input"
                    },
                    {
                      "$ref": "#/components/schemas/app__role_assignments__dataset__schema__RoleAssignment-Input"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignments"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "NodeData"
      },
      "NodeData-Output": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "link_to_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link To Id"
          },
          "icon_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon Key"
          },
          "domain": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Domain"
          },
          "domain_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Domain Id"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "assignments": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/app__role_assignments__data_product__schema__RoleAssignment-Output"
                    },
                    {
                      "$ref": "#/components/schemas/app__role_assignments__dataset__schema__RoleAssignment-Output"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignments"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "NodeData"
      },
      "NodeType": {
        "type": "string",
        "enum": [
          "dataProductNode",
          "dataOutputNode",
          "datasetNode",
          "domainNode"
        ],
        "title": "NodeType"
      },
      "NotificationGet-Input": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "event_id": {
            "type": "string",
            "format": "uuid",
            "title": "Event Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "event": {
            "$ref": "#/components/schemas/EventGet-Input"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "type": "object",
        "required": [
          "id",
          "event_id",
          "user_id",
          "event",
          "user"
        ],
        "title": "NotificationGet"
      },
      "NotificationGet-Output": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "event_id": {
            "type": "string",
            "format": "uuid",
            "title": "Event Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "event": {
            "$ref": "#/components/schemas/EventGet-Output"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "type": "object",
        "required": [
          "id",
          "event_id",
          "user_id",
          "event",
          "user"
        ],
        "title": "NotificationGet"
      },
      "Platform": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "Platform"
      },
      "PlatformService": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "platform": {
            "$ref": "#/components/schemas/Platform"
          },
          "result_string_template": {
            "type": "string",
            "title": "Result String Template"
          },
          "technical_info_template": {
            "type": "string",
            "title": "Technical Info Template"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "platform",
          "result_string_template",
          "technical_info_template"
        ],
        "title": "PlatformService"
      },
      "PlatformServiceConfiguration": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "platform": {
            "$ref": "#/components/schemas/Platform"
          },
          "service": {
            "$ref": "#/components/schemas/PlatformService"
          },
          "config": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Config"
          }
        },
        "type": "object",
        "required": [
          "id",
          "platform",
          "service",
          "config"
        ],
        "title": "PlatformServiceConfiguration"
      },
      "Prototype": {
        "type": "integer",
        "enum": [
          0,
          1,
          2,
          3
        ],
        "title": "Prototype"
      },
      "RedshiftConfig": {
        "properties": {
          "identifier": {
            "type": "string",
            "title": "Identifier"
          },
          "database_name": {
            "type": "string",
            "title": "Database Name"
          },
          "bucket_identifier": {
            "type": "string",
            "title": "Bucket Identifier"
          },
          "s3_path": {
            "type": "string",
            "title": "S3 Path"
          }
        },
        "type": "object",
        "required": [
          "identifier",
          "database_name",
          "bucket_identifier",
          "s3_path"
        ],
        "title": "RedshiftConfig"
      },
      "RedshiftDataOutput": {
        "properties": {
          "configuration_type": {
            "type": "string",
            "const": "RedshiftDataOutput",
            "title": "Configuration Type"
          },
          "database": {
            "type": "string",
            "title": "Database"
          },
          "schema": {
            "type": "string",
            "title": "Schema",
            "default": ""
          },
          "table": {
            "type": "string",
            "title": "Table",
            "default": "*"
          },
          "bucket_identifier": {
            "type": "string",
            "title": "Bucket Identifier",
            "default": ""
          },
          "database_path": {
            "type": "string",
            "title": "Database Path",
            "default": ""
          },
          "table_path": {
            "type": "string",
            "title": "Table Path",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "configuration_type",
          "database"
        ],
        "title": "RedshiftDataOutput"
      },
      "Role": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "permissions": {
            "items": {
              "$ref": "#/components/schemas/AuthorizationAction"
            },
            "type": "array",
            "title": "Permissions"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "prototype": {
            "$ref": "#/components/schemas/Prototype"
          }
        },
        "type": "object",
        "required": [
          "name",
          "scope",
          "description",
          "permissions",
          "id",
          "prototype"
        ],
        "title": "Role"
      },
      "RoleAssignmentResponse-Input": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "decision": {
            "$ref": "#/components/schemas/DecisionStatus"
          },
          "requested_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requested On"
          },
          "requested_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "decided_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Decided On"
          },
          "decided_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "user",
          "role",
          "decision",
          "requested_on",
          "requested_by",
          "decided_on",
          "decided_by"
        ],
        "title": "RoleAssignmentResponse"
      },
      "S3DataOutput": {
        "properties": {
          "configuration_type": {
            "type": "string",
            "const": "S3DataOutput",
            "title": "Configuration Type"
          },
          "bucket": {
            "type": "string",
            "title": "Bucket"
          },
          "suffix": {
            "type": "string",
            "title": "Suffix",
            "default": ""
          },
          "path": {
            "type": "string",
            "title": "Path"
          }
        },
        "type": "object",
        "required": [
          "configuration_type",
          "bucket",
          "path"
        ],
        "title": "S3DataOutput"
      },
      "Scope": {
        "type": "string",
        "enum": [
          "dataset",
          "data_product",
          "domain",
          "global"
        ],
        "title": "Scope"
      },
      "SnowflakeConfig": {
        "properties": {
          "identifier": {
            "type": "string",
            "title": "Identifier"
          },
          "database_name": {
            "type": "string",
            "title": "Database Name"
          }
        },
        "type": "object",
        "required": [
          "identifier",
          "database_name"
        ],
        "title": "SnowflakeConfig"
      },
      "SnowflakeDataOutput": {
        "properties": {
          "configuration_type": {
            "type": "string",
            "const": "SnowflakeDataOutput",
            "title": "Configuration Type"
          },
          "database": {
            "type": "string",
            "title": "Database"
          },
          "schema": {
            "type": "string",
            "title": "Schema",
            "default": ""
          },
          "table": {
            "type": "string",
            "title": "Table",
            "default": "*"
          },
          "bucket_identifier": {
            "type": "string",
            "title": "Bucket Identifier",
            "default": ""
          },
          "database_path": {
            "type": "string",
            "title": "Database Path",
            "default": ""
          },
          "table_path": {
            "type": "string",
            "title": "Table Path",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "configuration_type",
          "database"
        ],
        "title": "SnowflakeDataOutput"
      },
      "Tag": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "id",
          "value"
        ],
        "title": "Tag"
      },
      "TagCreate": {
        "properties": {
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "value"
        ],
        "title": "TagCreate"
      },
      "TagUpdate": {
        "properties": {
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "value"
        ],
        "title": "TagUpdate"
      },
      "TagsGet": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "id",
          "value"
        ],
        "title": "TagsGet"
      },
      "TechnicalInfo": {
        "properties": {
          "environment_id": {
            "type": "string",
            "format": "uuid",
            "title": "Environment Id"
          },
          "environment": {
            "type": "string",
            "title": "Environment"
          },
          "info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Info"
          }
        },
        "type": "object",
        "required": [
          "environment_id",
          "environment",
          "info"
        ],
        "title": "TechnicalInfo"
      },
      "ThemeSettings": {
        "properties": {
          "portal_name": {
            "type": "string",
            "title": "Portal Name"
          }
        },
        "type": "object",
        "required": [
          "portal_name"
        ],
        "title": "ThemeSettings"
      },
      "UpdateRole": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "permissions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AuthorizationAction"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Permissions"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "UpdateRole"
      },
      "User": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "external_id": {
            "type": "string",
            "title": "External Id"
          },
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          },
          "has_seen_tour": {
            "type": "boolean",
            "title": "Has Seen Tour"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "external_id",
          "first_name",
          "last_name",
          "has_seen_tour"
        ],
        "title": "User"
      },
      "UserCreate": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "external_id": {
            "type": "string",
            "title": "External Id"
          },
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          }
        },
        "type": "object",
        "required": [
          "email",
          "external_id",
          "first_name",
          "last_name"
        ],
        "title": "UserCreate"
      },
      "UsersGet-Input": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "external_id": {
            "type": "string",
            "title": "External Id"
          },
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          },
          "has_seen_tour": {
            "type": "boolean",
            "title": "Has Seen Tour"
          },
          "global_role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RoleAssignmentResponse-Input"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "external_id",
          "first_name",
          "last_name",
          "has_seen_tour",
          "global_role"
        ],
        "title": "UsersGet"
      },
      "UsersGet-Output": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "external_id": {
            "type": "string",
            "title": "External Id"
          },
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          },
          "has_seen_tour": {
            "type": "boolean",
            "title": "Has Seen Tour"
          },
          "global_role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/app__role_assignments__global___schema__RoleAssignmentResponse-Output"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "external_id",
          "first_name",
          "last_name",
          "has_seen_tour",
          "global_role"
        ],
        "title": "UsersGet"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "app__data_outputs__schema__DataOutput": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "namespace": {
            "type": "string",
            "title": "Namespace"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "status": {
            "$ref": "#/components/schemas/DataOutputStatus"
          },
          "sourceAligned": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sourcealigned"
          },
          "owner_id": {
            "type": "string",
            "format": "uuid",
            "title": "Owner Id"
          },
          "platform_id": {
            "type": "string",
            "format": "uuid",
            "title": "Platform Id"
          },
          "service_id": {
            "type": "string",
            "format": "uuid",
            "title": "Service Id"
          },
          "configuration": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/S3DataOutput"
              },
              {
                "$ref": "#/components/schemas/GlueDataOutput"
              },
              {
                "$ref": "#/components/schemas/DatabricksDataOutput"
              },
              {
                "$ref": "#/components/schemas/SnowflakeDataOutput"
              },
              {
                "$ref": "#/components/schemas/RedshiftDataOutput"
              }
            ],
            "title": "Configuration",
            "discriminator": {
              "propertyName": "configuration_type",
              "mapping": {
                "DatabricksDataOutput": "#/components/schemas/DatabricksDataOutput",
                "GlueDataOutput": "#/components/schemas/GlueDataOutput",
                "RedshiftDataOutput": "#/components/schemas/RedshiftDataOutput",
                "S3DataOutput": "#/components/schemas/S3DataOutput",
                "SnowflakeDataOutput": "#/components/schemas/SnowflakeDataOutput"
              }
            }
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "namespace",
          "description",
          "status",
          "sourceAligned",
          "owner_id",
          "platform_id",
          "service_id",
          "configuration"
        ],
        "title": "DataOutput"
      },
      "app__data_outputs_datasets__schema_response__DataOutput-Input": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "namespace": {
            "type": "string",
            "title": "Namespace"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "status": {
            "$ref": "#/components/schemas/DataOutputStatus"
          },
          "sourceAligned": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sourcealigned"
          },
          "owner_id": {
            "type": "string",
            "format": "uuid",
            "title": "Owner Id"
          },
          "platform_id": {
            "type": "string",
            "format": "uuid",
            "title": "Platform Id"
          },
          "service_id": {
            "type": "string",
            "format": "uuid",
            "title": "Service Id"
          },
          "configuration": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/S3DataOutput"
              },
              {
                "$ref": "#/components/schemas/GlueDataOutput"
              },
              {
                "$ref": "#/components/schemas/DatabricksDataOutput"
              },
              {
                "$ref": "#/components/schemas/SnowflakeDataOutput"
              },
              {
                "$ref": "#/components/schemas/RedshiftDataOutput"
              }
            ],
            "title": "Configuration",
            "discriminator": {
              "propertyName": "configuration_type",
              "mapping": {
                "DatabricksDataOutput": "#/components/schemas/DatabricksDataOutput",
                "GlueDataOutput": "#/components/schemas/GlueDataOutput",
                "RedshiftDataOutput": "#/components/schemas/RedshiftDataOutput",
                "S3DataOutput": "#/components/schemas/S3DataOutput",
                "SnowflakeDataOutput": "#/components/schemas/SnowflakeDataOutput"
              }
            }
          },
          "owner": {
            "$ref": "#/components/schemas/DataProduct-Input"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "namespace",
          "description",
          "status",
          "sourceAligned",
          "owner_id",
          "platform_id",
          "service_id",
          "configuration",
          "owner"
        ],
        "title": "DataOutput"
      },
      "app__data_outputs_datasets__schema_response__DataOutput-Output": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "namespace": {
            "type": "string",
            "title": "Namespace"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "status": {
            "$ref": "#/components/schemas/DataOutputStatus"
          },
          "sourceAligned": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sourcealigned"
          },
          "owner_id": {
            "type": "string",
            "format": "uuid",
            "title": "Owner Id"
          },
          "platform_id": {
            "type": "string",
            "format": "uuid",
            "title": "Platform Id"
          },
          "service_id": {
            "type": "string",
            "format": "uuid",
            "title": "Service Id"
          },
          "configuration": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/S3DataOutput"
              },
              {
                "$ref": "#/components/schemas/GlueDataOutput"
              },
              {
                "$ref": "#/components/schemas/DatabricksDataOutput"
              },
              {
                "$ref": "#/components/schemas/SnowflakeDataOutput"
              },
              {
                "$ref": "#/components/schemas/RedshiftDataOutput"
              }
            ],
            "title": "Configuration",
            "discriminator": {
              "propertyName": "configuration_type",
              "mapping": {
                "DatabricksDataOutput": "#/components/schemas/DatabricksDataOutput",
                "GlueDataOutput": "#/components/schemas/GlueDataOutput",
                "RedshiftDataOutput": "#/components/schemas/RedshiftDataOutput",
                "S3DataOutput": "#/components/schemas/S3DataOutput",
                "SnowflakeDataOutput": "#/components/schemas/SnowflakeDataOutput"
              }
            }
          },
          "owner": {
            "$ref": "#/components/schemas/DataProduct-Output"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "namespace",
          "description",
          "status",
          "sourceAligned",
          "owner_id",
          "platform_id",
          "service_id",
          "configuration",
          "owner"
        ],
        "title": "DataOutput"
      },
      "app__datasets__schema_response__DataOutput-Input": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "namespace": {
            "type": "string",
            "title": "Namespace"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "status": {
            "$ref": "#/components/schemas/DataOutputStatus"
          },
          "sourceAligned": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sourcealigned"
          },
          "owner_id": {
            "type": "string",
            "format": "uuid",
            "title": "Owner Id"
          },
          "platform_id": {
            "type": "string",
            "format": "uuid",
            "title": "Platform Id"
          },
          "service_id": {
            "type": "string",
            "format": "uuid",
            "title": "Service Id"
          },
          "configuration": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/S3DataOutput"
              },
              {
                "$ref": "#/components/schemas/GlueDataOutput"
              },
              {
                "$ref": "#/components/schemas/DatabricksDataOutput"
              },
              {
                "$ref": "#/components/schemas/SnowflakeDataOutput"
              },
              {
                "$ref": "#/components/schemas/RedshiftDataOutput"
              }
            ],
            "title": "Configuration",
            "discriminator": {
              "propertyName": "configuration_type",
              "mapping": {
                "DatabricksDataOutput": "#/components/schemas/DatabricksDataOutput",
                "GlueDataOutput": "#/components/schemas/GlueDataOutput",
                "RedshiftDataOutput": "#/components/schemas/RedshiftDataOutput",
                "S3DataOutput": "#/components/schemas/S3DataOutput",
                "SnowflakeDataOutput": "#/components/schemas/SnowflakeDataOutput"
              }
            }
          },
          "owner": {
            "$ref": "#/components/schemas/DataProduct-Input"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "namespace",
          "description",
          "status",
          "sourceAligned",
          "owner_id",
          "platform_id",
          "service_id",
          "configuration",
          "owner"
        ],
        "title": "DataOutput"
      },
      "app__datasets__schema_response__DataOutput-Output": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "namespace": {
            "type": "string",
            "title": "Namespace"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "status": {
            "$ref": "#/components/schemas/DataOutputStatus"
          },
          "sourceAligned": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sourcealigned"
          },
          "owner_id": {
            "type": "string",
            "format": "uuid",
            "title": "Owner Id"
          },
          "platform_id": {
            "type": "string",
            "format": "uuid",
            "title": "Platform Id"
          },
          "service_id": {
            "type": "string",
            "format": "uuid",
            "title": "Service Id"
          },
          "configuration": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/S3DataOutput"
              },
              {
                "$ref": "#/components/schemas/GlueDataOutput"
              },
              {
                "$ref": "#/components/schemas/DatabricksDataOutput"
              },
              {
                "$ref": "#/components/schemas/SnowflakeDataOutput"
              },
              {
                "$ref": "#/components/schemas/RedshiftDataOutput"
              }
            ],
            "title": "Configuration",
            "discriminator": {
              "propertyName": "configuration_type",
              "mapping": {
                "DatabricksDataOutput": "#/components/schemas/DatabricksDataOutput",
                "GlueDataOutput": "#/components/schemas/GlueDataOutput",
                "RedshiftDataOutput": "#/components/schemas/RedshiftDataOutput",
                "S3DataOutput": "#/components/schemas/S3DataOutput",
                "SnowflakeDataOutput": "#/components/schemas/SnowflakeDataOutput"
              }
            }
          },
          "owner": {
            "$ref": "#/components/schemas/DataProduct-Output"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "namespace",
          "description",
          "status",
          "sourceAligned",
          "owner_id",
          "platform_id",
          "service_id",
          "configuration",
          "owner"
        ],
        "title": "DataOutput"
      },
      "app__role_assignments__data_product__schema__CreateRoleAssignment": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "role_id": {
            "type": "string",
            "format": "uuid",
            "title": "Role Id"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "role_id"
        ],
        "title": "CreateRoleAssignment"
      },
      "app__role_assignments__data_product__schema__ModifyRoleAssignment": {
        "properties": {
          "role_id": {
            "type": "string",
            "format": "uuid",
            "title": "Role Id"
          }
        },
        "type": "object",
        "required": [
          "role_id"
        ],
        "title": "ModifyRoleAssignment"
      },
      "app__role_assignments__data_product__schema__RoleAssignment-Input": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "data_product": {
            "$ref": "#/components/schemas/DataProduct-Input"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Role"
              },
              {
                "type": "null"
              }
            ]
          },
          "decision": {
            "$ref": "#/components/schemas/DecisionStatus"
          },
          "requested_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requested On"
          },
          "requested_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "decided_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Decided On"
          },
          "decided_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "data_product_id": {
            "type": "string",
            "format": "uuid",
            "title": "Data Product Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Id"
          },
          "requested_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requested By Id"
          },
          "decided_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Decided By Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "data_product",
          "user",
          "role",
          "decision",
          "requested_on",
          "requested_by",
          "decided_on",
          "decided_by",
          "data_product_id",
          "user_id",
          "role_id",
          "requested_by_id",
          "decided_by_id"
        ],
        "title": "RoleAssignment"
      },
      "app__role_assignments__data_product__schema__RoleAssignment-Output": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "data_product": {
            "$ref": "#/components/schemas/DataProduct-Output"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Role"
              },
              {
                "type": "null"
              }
            ]
          },
          "decision": {
            "$ref": "#/components/schemas/DecisionStatus"
          },
          "requested_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requested On"
          },
          "requested_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "decided_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Decided On"
          },
          "decided_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "data_product_id": {
            "type": "string",
            "format": "uuid",
            "title": "Data Product Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Id"
          },
          "requested_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requested By Id"
          },
          "decided_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Decided By Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "data_product",
          "user",
          "role",
          "decision",
          "requested_on",
          "requested_by",
          "decided_on",
          "decided_by",
          "data_product_id",
          "user_id",
          "role_id",
          "requested_by_id",
          "decided_by_id"
        ],
        "title": "RoleAssignment"
      },
      "app__role_assignments__data_product__schema__RoleAssignmentResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "data_product": {
            "$ref": "#/components/schemas/DataProduct-Output"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Role"
              },
              {
                "type": "null"
              }
            ]
          },
          "decision": {
            "$ref": "#/components/schemas/DecisionStatus"
          },
          "requested_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requested On"
          },
          "requested_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "decided_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Decided On"
          },
          "decided_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "data_product",
          "user",
          "role",
          "decision",
          "requested_on",
          "requested_by",
          "decided_on",
          "decided_by"
        ],
        "title": "RoleAssignmentResponse"
      },
      "app__role_assignments__dataset__schema__CreateRoleAssignment": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "role_id": {
            "type": "string",
            "format": "uuid",
            "title": "Role Id"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "role_id"
        ],
        "title": "CreateRoleAssignment"
      },
      "app__role_assignments__dataset__schema__DecideRoleAssignment": {
        "properties": {
          "decision": {
            "$ref": "#/components/schemas/DecisionStatus"
          }
        },
        "type": "object",
        "required": [
          "decision"
        ],
        "title": "DecideRoleAssignment"
      },
      "app__role_assignments__dataset__schema__ModifyRoleAssignment": {
        "properties": {
          "role_id": {
            "type": "string",
            "format": "uuid",
            "title": "Role Id"
          }
        },
        "type": "object",
        "required": [
          "role_id"
        ],
        "title": "ModifyRoleAssignment"
      },
      "app__role_assignments__dataset__schema__RoleAssignment-Input": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "dataset": {
            "$ref": "#/components/schemas/Dataset"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Role"
              },
              {
                "type": "null"
              }
            ]
          },
          "decision": {
            "$ref": "#/components/schemas/DecisionStatus"
          },
          "requested_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requested On"
          },
          "requested_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "decided_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Decided On"
          },
          "decided_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Id"
          },
          "requested_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requested By Id"
          },
          "decided_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Decided By Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "dataset",
          "user",
          "role",
          "decision",
          "requested_on",
          "requested_by",
          "decided_on",
          "decided_by",
          "dataset_id",
          "user_id",
          "role_id",
          "requested_by_id",
          "decided_by_id"
        ],
        "title": "RoleAssignment"
      },
      "app__role_assignments__dataset__schema__RoleAssignment-Output": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "dataset": {
            "$ref": "#/components/schemas/Dataset"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Role"
              },
              {
                "type": "null"
              }
            ]
          },
          "decision": {
            "$ref": "#/components/schemas/DecisionStatus"
          },
          "requested_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requested On"
          },
          "requested_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "decided_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Decided On"
          },
          "decided_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Id"
          },
          "requested_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requested By Id"
          },
          "decided_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Decided By Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "dataset",
          "user",
          "role",
          "decision",
          "requested_on",
          "requested_by",
          "decided_on",
          "decided_by",
          "dataset_id",
          "user_id",
          "role_id",
          "requested_by_id",
          "decided_by_id"
        ],
        "title": "RoleAssignment"
      },
      "app__role_assignments__dataset__schema__RoleAssignmentResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "dataset": {
            "$ref": "#/components/schemas/Dataset"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Role"
              },
              {
                "type": "null"
              }
            ]
          },
          "decision": {
            "$ref": "#/components/schemas/DecisionStatus"
          },
          "requested_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requested On"
          },
          "requested_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "decided_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Decided On"
          },
          "decided_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "dataset",
          "user",
          "role",
          "decision",
          "requested_on",
          "requested_by",
          "decided_on",
          "decided_by"
        ],
        "title": "RoleAssignmentResponse"
      },
      "app__role_assignments__global___schema__CreateRoleAssignment": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "string",
                "const": "admin"
              }
            ],
            "title": "Role Id"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "role_id"
        ],
        "title": "CreateRoleAssignment"
      },
      "app__role_assignments__global___schema__ModifyRoleAssignment": {
        "properties": {
          "role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "string",
                "const": "admin"
              }
            ],
            "title": "Role Id"
          }
        },
        "type": "object",
        "required": [
          "role_id"
        ],
        "title": "ModifyRoleAssignment"
      },
      "app__role_assignments__global___schema__RoleAssignmentResponse-Output": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "decision": {
            "$ref": "#/components/schemas/DecisionStatus"
          },
          "requested_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requested On"
          },
          "requested_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "decided_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Decided On"
          },
          "decided_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "user",
          "role",
          "decision",
          "requested_on",
          "requested_by",
          "decided_on",
          "decided_by"
        ],
        "title": "RoleAssignmentResponse"
      }
    },
    "securitySchemes": {
      "HTTPBasic": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}

# Default values for data product portal.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

custom_translation_file_path: ""
global:
  postgresql:
    auth:
      password: pw
      database: data-product-portal
      port: "!!string 5432"
      server: data-product-portal-postgresql
      username: postgres
postgres_enabled: false
cloudwatch_enabled: false
api_key:
  enabled: false
  key: ""
host: www.pleaseupdateme.com
oidc:
  enabled: false
  client_id: id
  client_secret: secret
  authority: www.pleaseupdateme.com
  redirect_uri: www.pleaseupdateme.com
conveyor:
  api_key: conveyor_key
  secret: conveyor_secret
database:
  password: pw
  dbname: data-product-portal
  port: "!!string 5432"
  server: data-product-portal-postgresql
  username: postgres
infrastructure_lambda_arn: ""

replicaCount: 1

image:
  repository: public.ecr.aws/conveyordata/data-product-portal/backend
  pullPolicy: Always
  tag: 0.2.2

frontendimage:
  repository: public.ecr.aws/conveyordata/data-product-portal/frontend
  pullPolicy: Always
  tag: 0.2.2

imagePullSecrets: []
nameOverride: ""
frontendnameOverride: ""
fullnameOverride: ""
frontendfullnameOverride: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "portal-backend"

podAnnotations: {}
podLabels: {}

podSecurityContext: {}

securityContext:
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000


frontendservice:
  type: NodePort
  port: 8080

service:
  type: NodePort
  port: 5050

ingress:
  enabled: true
  className: ""
  annotations: {}
  pathType: Prefix
  hosts:
    - paths:
      - path: /api
        pathType: Prefix
        name: data-product-portal
        number: 5050
      - path: /
        pathType: Prefix
        name: frontend
        number: 8080
  tls: []

resources: {}

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

frontendvolumes:
- name: nginxcache
- name: nginxrun
- name: config
  configMap:
    name: frontend

frontendvolumeMounts:
  - name: nginxcache
    mountPath: /var/cache/nginx
  - name: nginxrun
    mountPath: /var/run
  - name: config
    mountPath: /app/dist/config.js
    subPath: config.js

volumes:
  - name: varlog
    emptyDir: {}
  - name: sampledata
    configMap:
      name: sampledata
      optional: true


volumeMounts:
  - name: varlog
    mountPath: /var/logs
  - name: sampledata
    mountPath: /sampledata

nodeSelector: {}

tolerations: []

affinity: {}

services:
  mailhog:
    image: mailhog/mailhog
    ports:
      - "8025:8025"
      - "1025:1025"
  backend:
    build: ./backend
    env_file:
      - .env.docker
    depends_on:
      mailhog:
         condition: service_started
      postgresql:
        condition: service_healthy
    command: >
      bash -c "python -m app.db_tool init --force sample_data.sql
      && uvicorn app.main:app --host 0.0.0.0 --port 5050"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5050"]
      interval: 5s
      timeout: 3s
      retries: 10
  frontend:
    build: ./frontend
    volumes:
      - ${PWD:-.}/frontend/config.docker.js:/app/dist/config.js
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 5s
      timeout: 3s
      retries: 10

  postgresql:
    image: postgres:17.6
    container_name: data-product-portal-postgresql
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    env_file:
      - .env.docker
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 2s
      timeout: 1s
      retries: 120
  nginx:
    build: ./nginx
    ports:
      - "8080:80"
      - "5050:5050"
    depends_on:
      - backend
      - frontend

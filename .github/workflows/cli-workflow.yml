name: CLI build and release

on:
  push:
    tags:
      - "*"

permissions:
  contents: read

jobs:
  prep-version:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get Previous tag
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - name: Set new version env
        env:
           TAG: ${{ steps.previoustag.outputs.tag }}
        run: |
          echo "TAG=${TAG#v}" >> $GITHUB_ENV
          echo "APP_VERSION=$(cat VERSION)" >> $GITHUB_ENV
      - name: Check Version Update
        id: versionupdate
        if: ${{ env.TAG != env.APP_VERSION }}
        uses: actions/github-script@v7
        with:
          script: |
              core.setFailed('VERSION is not the latest tag, did you do a version bump?')
    outputs:
      version: ${{ env.APP_VERSION }}
  cli:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    needs: ["prep-version"]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      -
        name: Set up Go
        uses: actions/setup-go@v5
      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          # either 'goreleaser' (default) or 'goreleaser-pro'
          distribution: goreleaser
          # 'latest', 'nightly', or a semver
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Upload assets
        uses: actions/upload-artifact@v4
        with:
          name: Data product portal CLI
          path: dist/*

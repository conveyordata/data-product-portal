name: Docker Image CI

on:
  push:
    branches:
      - 'fix-build'

permissions:
  contents: read

jobs:
  prep-version:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      - name: Get commit hash
        id: vars
        run: echo "version=$(git rev-parse --short=7 HEAD)" >> $GITHUB_OUTPUT
    outputs:
        version: ${{ steps.vars.outputs.version }}
  backend:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    needs: ["prep-version"]
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@00943011d9042930efac3dcd3a170e4273319bc8 # v5.1.0
        with:
          role-to-assume: arn:aws:iam::${{ secrets.BUILDACCOUNTID }}:role/portal_github_actions
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        with:
          registries: ${{ secrets.PUBLICAWSACCOUNTID }}
          registry-type: public
          mask-password: "true"
      - name: Build, tag, and push image to Amazon ECR
        id: build-publish
        shell: bash
        env:
          ECR_REGISTRY: public.ecr.aws/conveyordata
          ECR_REPOSITORY: data-product-portal/backend
          IMAGE_TAG: ${{ needs.prep-version.outputs.version }}
        run: |
          docker build ./backend -t "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          docker push "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          echo "IMAGE $IMAGE_TAG is pushed to $ECR_REGISTRY/$ECR_REPOSITORY"
          echo "image_tag=$IMAGE_TAG"
          echo "full_image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
  frontend:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    needs: ["prep-version"]
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@00943011d9042930efac3dcd3a170e4273319bc8 # v5.1.0
        with:
          role-to-assume: arn:aws:iam::${{ secrets.BUILDACCOUNTID }}:role/portal_github_actions
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        with:
          registries: ${{ secrets.PUBLICAWSACCOUNTID }}
          registry-type: public
          mask-password: "true"
      - name: Build, tag, and push image to Amazon ECR
        id: build-publish
        shell: bash
        env:
          ECR_REGISTRY: public.ecr.aws/conveyordata
          ECR_REPOSITORY: data-product-portal/frontend
          IMAGE_TAG: ${{ needs.prep-version.outputs.version }}
        run: |
          docker build ./frontend -t "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          docker push "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          echo "IMAGE $IMAGE_TAG is pushed to $ECR_REGISTRY/$ECR_REPOSITORY"
          echo "image_tag=$IMAGE_TAG"
          echo "full_image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

  deploy-on-portal-dev:
    name: Deploy to portal dev
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    needs: ["backend","frontend"]
    steps:
      - name: Dispatch to demo-portal-infrastructure
        run: |
          repo_owner="datamindedbe"
          repo_name="demo-portal-infrastructure"
          event_type="apply-portal-release"
          version="$(git rev-parse --short=7 HEAD)"

          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.DEMO_INFRASTRUCTURE_PAT }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/$repo_owner/$repo_name/dispatches" \
            -d "{\"event_type\": \"$event_type\", \"client_payload\": {\"tag\": \"$version\", \"env\": \"demo_dev\", \"integration\": true}}"
